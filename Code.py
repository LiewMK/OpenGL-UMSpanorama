import pygame
from pygame.locals import *
from OpenGL.GL import *
from OpenGL.GLU import *
import math
import os

cubeEdges = ((0, 1), (1, 2), (2, 3), (3, 0), (0, 4), (1, 5), (2, 6), (3, 7), (4, 5), (5, 6), (6, 7), (7, 4))
cubeSurfaces = ((0, 1, 2, 3), (4, 5, 6, 7), (0, 4, 5, 1), (1, 5, 6, 2), (2, 3, 7, 6), (3, 0, 4, 7))
octaEdges = ((0, 1), (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 0),
             (0, 8), (1, 9), (2, 10), (3, 11), (4, 12), (5, 13), (6, 14), (7, 15),
             (8, 9), (9, 10), (10, 11), (11, 12), (12, 13), (13, 14), (14, 15), (15, 8))
octaSurfaces = ((0, 1, 4, 5), (1, 2, 6, 5), (2, 3, 6, 7), (3, 4, 7, 0),
                (8, 9, 12, 13), (9, 10, 13, 14), (10, 11, 14, 15), (11, 12, 15, 8),
                (0, 1, 9, 8), (1, 2, 10, 9), (2, 3, 11, 10), (3, 4, 12, 11),
                (4, 5, 13, 12), (5, 6, 14, 13), (6, 7, 15, 14), (7, 0, 8, 15))
pyramidEdges = ((0, 1), (0, 2), (0, 3), (0, 4), (1, 2), (2, 3), (3, 4), (4, 1))
pyramidSurfaces = ((0, 1, 2), (0, 4, 1), (0, 3, 4), (0, 2, 3), (1, 2, 3, 4))
gateEdges = ((0, 1), (1, 2), (2, 3), (3, 0), (0, 4), (1, 5), (2, 6), (3, 7), (4, 5), (5, 6), (6, 7), (7, 4),
              (8, 9), (9, 10), (10, 11), (11, 8), (8, 12), (9, 13), (10, 14), (11, 15), (12, 13), (13, 14), (14, 15), (15, 12),
              (16, 17), (17, 18), (18, 19), (19, 16), (16, 20), (17, 21), (18, 22), (19, 23), (20, 21), (21, 22), (22, 23), (23, 20),
              (24, 25), (25, 26), (26, 27), (27, 24), (24, 28), (25, 29), (26, 30), (27, 31), (28, 29), (29, 30), (30, 31), (31, 28),
              (32, 33), (33, 34), (34, 35), (35, 32), (32, 36), (33, 37), (34, 38), (35, 39), (36, 37), (37, 38), (38, 39), (39, 36),
              (40, 41), (41, 42), (42, 43), (43, 40), (40, 44), (41, 45), (42, 46), (43, 47), (44, 45), (45, 46), (46, 47), (47, 44),
              (48, 49), (49, 50), (50, 51), (51, 48), (48, 52), (49, 53), (50, 54), (51, 55), (52, 53), (53, 54), (54, 55), (55, 52),
              (56, 57), (57, 58), (58, 59), (59, 56), (56, 60), (57, 61), (58, 62), (59, 63), (60, 61), (61, 62), (62, 63), (63, 60),
              (64, 65), (65, 66), (66, 67), (67, 64), (64, 68), (65, 69), (66, 70), (67, 71), (68, 69), (69, 70), (70, 71), (71, 68),
              (72, 73), (73, 74), (74, 75), (75, 72), (72, 76), (73, 77), (74, 78), (75, 79), (76, 77), (77, 78), (78, 79), (79, 76),
              (80, 81), (81, 82), (82, 83), (83, 80), (80, 84), (81, 85), (82, 86), (83, 87), (84, 85), (85, 86), (86, 87), (87, 84),
              (88, 89), (89, 90), (90, 91), (91, 88), (92, 93), (93, 94), (94, 95), (95, 92), (96, 97), (97, 98), (98, 99), (99, 96),
              (100, 101), (101, 102), (102, 103), (103, 100), (104, 105), (105, 106), (106, 107), (107, 104),
              (108, 109), (109, 110), (110, 111), (111, 108), (112, 113), (113, 114), (114, 115), (115, 112),
              (116, 117), (117, 118), (118, 119), (119, 116), (120, 121), (121, 122), (122, 123), (123, 120),
              (124, 125), (125, 126), (126, 127), (127, 124))
gateSurfaces = ((0, 1, 2, 3), (4, 5, 6, 7), (0, 4, 5, 1), (1, 5, 6, 2), (2, 3, 7, 6), (3, 0, 4, 7),
                (0+8, 1+8, 2+8, 3+8), (4+8, 5+8, 6+8, 7+8), (0+8, 4+8, 5+8, 1+8), (1+8, 5+8, 6+8, 2+8), (2+8, 3+8, 7+8, 6+8), (3+8, 0+8, 4+8, 7+8),
                (0+16, 1+16, 2+16, 3+16), (4+16, 5+16, 6+16, 7+16), (0+16, 4+16, 5+16, 1+16), (1+16, 5+16, 6+16, 2+16), (2+16, 3+16, 7+16, 6+16), (3+16, 0+16, 4+16, 7+16),
                (0+24, 1+24, 2+24, 3+24), (4+24, 5+24, 6+24, 7+24), (0+24, 4+24, 5+24, 1+24), (1+24, 5+24, 6+24, 2+24), (2+24, 3+24, 7+24, 6+24), (3+24, 0+24, 4+24, 7+24),
                (0+32, 1+32, 2+32, 3+32), (4+32, 5+32, 6+32, 7+32), (0+32, 4+32, 5+32, 1+32), (1+32, 5+32, 6+32, 2+32), (2+32, 3+32, 7+32, 6+32), (3+32, 0+32, 4+32, 7+32),
                (0+40, 1+40, 2+40, 3+40), (4+40, 5+40, 6+40, 7+40), (0+40, 4+40, 5+40, 1+40), (1+40, 5+40, 6+40, 2+40), (2+40, 3+40, 7+40, 6+40), (3+40, 0+40, 4+40, 7+40),
                (0+48, 1+48, 2+48, 3+48), (4+48, 5+48, 6+48, 7+48), (0+48, 4+48, 5+48, 1+48), (1+48, 5+48, 6+48, 2+48), (2+48, 3+48, 7+48, 6+48), (3+48, 0+48, 4+48, 7+48),
                (0+56, 1+56, 2+56, 3+56), (4+56, 5+56, 6+56, 7+56), (0+56, 4+56, 5+56, 1+56), (1+56, 5+56, 6+56, 2+56), (2+56, 3+56, 7+56, 6+56), (3+56, 0+56, 4+56, 7+56),
                (0+64, 1+64, 2+64, 3+64), (4+64, 5+64, 6+64, 7+64), (0+64, 4+64, 5+64, 1+64), (1+64, 5+64, 6+64, 2+64), (2+64, 3+64, 7+64, 6+64), (3+64, 0+64, 4+64, 7+64),
                (0+72, 1+72, 2+72, 3+72), (4+72, 5+72, 6+72, 7+72), (0+72, 4+72, 5+72, 1+72), (1+72, 5+72, 6+72, 2+72), (2+72, 3+72, 7+72, 6+72), (3+72, 0+72, 4+72, 7+72),
                (0+80, 1+80, 2+80, 3+80), (4+80, 5+80, 6+80, 7+80), (0+80, 4+80, 5+80, 1+80), (1+80, 5+80, 6+80, 2+80), (2+80, 3+80, 7+80, 6+80), (3+80, 0+80, 4+80, 7+80),
                (88, 89, 90, 91), (92, 93, 94, 95), (96, 97, 98, 99), (100, 101, 102, 103), (104, 105, 106, 107), (108, 109, 110, 111),
                (112, 113, 114, 115), (116, 117, 118, 119), (120, 121, 122, 123), (124, 125, 126, 127))
DEG2RAD = 3.14159/180
radius1 = 0.35
radius2 = 13
leafEdges = ((0, 1), (1, 2), (2, 3), (3, 0), (4, 5), (5, 6), (6, 7), (7, 4), (8, 9), (9, 10), (10, 11), (11, 8),
              (12, 13), (13, 14), (14, 15), (15, 12), (16, 17), (17, 18), (18, 19), (19, 16), (20, 21), (21, 22), (22, 23),
              (23, 20), (24, 25), (25, 26), (26, 27), (27, 24), (28, 29), (29, 30), (30, 31), (31, 28))
leafSurfaces = ((0, 1, 2, 3), (4, 5, 6, 7), (8, 9, 10, 11), (12, 13, 14, 15), (16, 17, 18, 19), (20, 21, 22, 23),
                 (24, 25, 26, 27), (28, 29, 30, 31))

#############################################       tree       #########################################################
tree1Vertices = ((-1.8, -3.7, 3.7), (-1.9, -3.7, 3.7), (-1.9, -3.7, 3.6), (-1.8, -3.7, 3.6), (-1.85, -2.3, 3.65))
tree1Edges = pyramidEdges
tree1Surfaces = pyramidSurfaces
tree2Vertices = ((1.8, -3.7, 3.7), (1.9, -3.7, 3.7), (1.9, -3.7, 3.6), (1.8, -3.7, 3.6), (1.85, -2.3, 3.65))
tree2Edges = pyramidEdges
tree2Surfaces = pyramidSurfaces
tree3Vertices = ((3.3, -3.7, 1.4), (3.4, -3.7, 1.4), (3.4, -3.7, 1.3), (3.3, -3.7, 1.3), (3.35, -2.3, 1.35))
tree3Edges = pyramidEdges
tree3Surfaces = pyramidSurfaces
tree4Vertices = ((3.3, -3.7, -1.4), (3.4, -3.7, -1.4), (3.4, -3.7, -1.3), (3.3, -3.7, -1.3), (3.35, -2.3, -1.35))
tree4Edges = pyramidEdges
tree4Surfaces = pyramidSurfaces
tree5Vertices = ((-1.8, -3.7, -3.7), (-1.9, -3.7, -3.7), (-1.9, -3.7, -3.6), (-1.8, -3.7, -3.6), (-1.85, -2.3, -3.65))
tree5Edges = pyramidEdges
tree5Surfaces = pyramidSurfaces
tree6Vertices = ((1.8, -3.7, -3.7), (1.9, -3.7, -3.7), (1.9, -3.7, -3.6), (1.8, -3.7, -3.6), (1.85, -2.3, -3.65))
tree6Edges = pyramidEdges
tree6Surfaces = pyramidSurfaces
tree7Vertices = ((-3.3, -3.7, -1.4), (-3.4, -3.7, -1.4), (-3.4, -3.7, -1.3), (-3.3, -3.7, -1.3), (-3.35, -2.3, -1.35))
tree7Edges = pyramidEdges
tree7Surfaces = pyramidSurfaces
tree8Vertices = ((-3.3, -3.7, 1.4), (-3.4, -3.7, 1.4), (-3.4, -3.7, 1.3), (-3.3, -3.7, 1.3), (-3.35, -2.3, 1.35))
tree8Edges = pyramidEdges
tree8Surfaces = pyramidSurfaces

#################################################       leaf       ####################################################
leaf1Vertices = ((-1.85, -2.3, 3.65), (-1.85-0.3, -2.3+0.2, 3.65), (-1.85-0.8, -2.3-0.4, 3.65), (-1.85-0.3, -2.3, 3.65),
                 (1.85, -2.3, 3.65), (1.85-0.3, -2.3+0.2, 3.65), (1.85-0.8, -2.3-0.4, 3.65), (1.85-0.3, -2.3, 3.65),
                 (-1.85, -2.3, -3.65), (-1.85-0.3, -2.3+0.2, -3.65), (-1.85-0.8, -2.3-0.4, -3.65), (-1.85-0.3, -2.3, -3.65),
                 (1.85, -2.3, -3.65), (1.85-0.3, -2.3+0.2, -3.65), (1.85-0.8, -2.3-0.4, -3.65), (1.85-0.3, -2.3, -3.65),
                 (-3.35, -2.3, 1.35), (-3.35-0.3, -2.3+0.2, 1.35), (-3.35-0.8, -2.3-0.4, 1.35), (-3.35-0.3, -2.3, 1.35),
                 (3.35, -2.3, 1.35), (3.35-0.3, -2.3+0.2, 1.35), (3.35-0.8, -2.3-0.4, 1.35), (3.35-0.3, -2.3, 1.35),
                 (-3.35, -2.3, -1.35), (-3.35-0.3, -2.3+0.2, -1.35), (-3.35-0.8, -2.3-0.4, -1.35), (-3.35-0.3, -2.3, -1.35),
                 (3.35, -2.3, -1.35), (3.35-0.3, -2.3+0.2, -1.35), (3.35-0.8, -2.3-0.4, -1.35), (3.35-0.3, -2.3, -1.35))
leaf1Edges = leafEdges
leaf1Surfaces = leafSurfaces
leaf2Vertices = ((-1.85, -2.3, 3.65), (-1.85+0.3, -2.3+0.2, 3.65), (-1.85+0.8, -2.3-0.4, 3.65), (-1.85+0.3, -2.3, 3.65),
                 (1.85, -2.3, 3.65), (1.85+0.3, -2.3+0.2, 3.65), (1.85+0.8, -2.3-0.4, 3.65), (1.85+0.3, -2.3, 3.65),
                 (-1.85, -2.3, -3.65), (-1.85+0.3, -2.3+0.2, -3.65), (-1.85+0.8, -2.3-0.4, -3.65), (-1.85+0.3, -2.3, -3.65),
                 (1.85, -2.3, -3.65), (1.85+0.3, -2.3+0.2, -3.65), (1.85+0.8, -2.3-0.4, -3.65), (1.85+0.3, -2.3, -3.65),
                 (-3.35, -2.3, 1.35), (-3.35+0.3, -2.3+0.2, 1.35), (-3.35+0.8, -2.3-0.4, 1.35), (-3.35+0.3, -2.3, 1.35),
                 (3.35, -2.3, 1.35), (3.35+0.3, -2.3+0.2, 1.35), (3.35+0.8, -2.3-0.4, 1.35), (3.35+0.3, -2.3, 1.35),
                 (-3.35, -2.3, -1.35), (-3.35+0.3, -2.3+0.2, -1.35), (-3.35+0.8, -2.3-0.4, -1.35), (-3.35+0.3, -2.3, -1.35),
                 (3.35, -2.3, -1.35), (3.35+0.3, -2.3+0.2, -1.35), (3.35+0.8, -2.3-0.4, -1.35), (3.35+0.3, -2.3, -1.35))
leaf2Edges = leafEdges
leaf2Surfaces = leafSurfaces
leaf3Vertices = ((-1.85, -2.3, 3.65), (-1.85, -2.3+0.2, 3.65+0.3), (-1.85, -2.3-0.4, 3.65+0.8), (-1.85, -2.3, 3.65+0.3),
                 (1.85, -2.3, 3.65), (1.85, -2.3+0.2, 3.65+0.3), (1.85, -2.3-0.4, 3.65+0.8), (1.85, -2.3, 3.65+0.3),
                 (-1.85, -2.3, -3.65), (-1.85, -2.3+0.2, -3.65+0.3), (-1.85, -2.3-0.4, -3.65+0.8), (-1.85, -2.3, -3.65+0.3),
                 (1.85, -2.3, -3.65), (1.85, -2.3+0.2, -3.65+0.3), (1.85, -2.3-0.4, -3.65+0.8), (1.85, -2.3, -3.65+0.3),
                 (-3.35, -2.3, 1.35), (-3.35, -2.3+0.2, 1.35+0.3), (-3.35, -2.3-0.4, 1.35+0.8), (-3.35, -2.3, 1.35+0.3),
                 (3.35, -2.3, 1.35), (3.35, -2.3+0.2, 1.35+0.3), (3.35, -2.3-0.4, 1.35+0.8), (3.35, -2.3, 1.35+0.3),
                 (-3.35, -2.3, -1.35), (-3.35, -2.3+0.2, -1.35+0.3), (-3.35, -2.3-0.4, -1.35+0.8), (-3.35, -2.3, -1.35+0.3),
                 (3.35, -2.3, -1.35), (3.35, -2.3+0.2, -1.35+0.3), (3.35, -2.3-0.4, -1.35+0.8), (3.35, -2.3, -1.35+0.3))
leaf3Edges = leafEdges
leaf3Surfaces = leafSurfaces
leaf4Vertices = ((-1.85, -2.3, 3.65), (-1.85, -2.3+0.2, 3.65-0.3), (-1.85, -2.3-0.4, 3.65-0.8), (-1.85, -2.3, 3.65-0.3),
                 (1.85, -2.3, 3.65), (1.85, -2.3+0.2, 3.65-0.3), (1.85, -2.3-0.4, 3.65-0.8), (1.85, -2.3, 3.65-0.3),
                 (-1.85, -2.3, -3.65), (-1.85, -2.3+0.2, -3.65-0.3), (-1.85, -2.3-0.4, -3.65-0.8), (-1.85, -2.3, -3.65-0.3),
                 (1.85, -2.3, -3.65), (1.85, -2.3+0.2, -3.65-0.3), (1.85, -2.3-0.4, -3.65-0.8), (1.85, -2.3, -3.65-0.3),
                 (-3.35, -2.3, 1.35), (-3.35, -2.3+0.2, 1.35-0.3), (-3.35, -2.3-0.4, 1.35-0.8), (-3.35, -2.3, 1.35-0.3),
                 (3.35, -2.3, 1.35), (3.35, -2.3+0.2, 1.35-0.3), (3.35, -2.3-0.4, 1.35-0.8), (3.35, -2.3, 1.35-0.3),
                 (-3.35, -2.3, -1.35), (-3.35, -2.3+0.2, -1.35-0.3), (-3.35, -2.3-0.4, -1.35-0.8), (-3.35, -2.3, -1.35-0.3),
                 (3.35, -2.3, -1.35), (3.35, -2.3+0.2, -1.35-0.3), (3.35, -2.3-0.4, -1.35-0.8), (3.35, -2.3, -1.35-0.3))
leaf4Edges = leafEdges
leaf4Surfaces = leafSurfaces

#############################################       base       ########################################################
baseBlockVertices = ((-1, -3.1, 2.7), (1, -3.1, 2.7), (2.7, -3.1, 1), (2.7, -3.1, -1),
                     (1, -3.1, -2.7), (-1, -3.1, -2.7), (-2.7, -3.1, -1), (-2.7, -3.1, 1),
                     (-1, -3.7, 2.7), (1, -3.7, 2.7), (2.7, -3.7, 1), (2.7, -3.7, -1),
                     (1, -3.7, -2.7), (-1, -3.7, -2.7), (-2.7, -3.7, -1), (-2.7, -3.7, 1))
baseBlockEdges = octaEdges
baseBlockSurfaces = octaSurfaces
base1Vertices = ((-1, -3, 1), (1, -3, 1), (1, -3, -1), (-1, -3, -1),
                 (-1, -3.1, 1), (1, -3.1, 1), (1, -3.1, -1), (-1, -3.1, -1))
base1Edges = cubeEdges
base1Surfaces = cubeSurfaces
base2Vertices = ((-0.8, -1.5, 0.8), (0.8, -1.5, 0.8), (0.8, -1.5, -0.8), (-0.8, -1.5, -0.8),
                 (-0.8, -1.4, 0.8), (0.8, -1.4, 0.8), (0.8, -1.4, -0.8), (-0.8, -1.4, -0.8))
base2Edges = cubeEdges
base2Surfaces = cubeSurfaces
base3Vertices = ((-0.75, 1.6, 0.75), (0.75, 1.6, 0.75), (0.75, 1.6, -0.75), (-0.75, 1.6, -0.75),
                 (-0.75, 1.7, 0.75), (0.75, 1.7, 0.75), (0.75, 1.7, -0.75), (-0.75, 1.7, -0.75))
base3Edges = cubeEdges
base3Surfaces = cubeSurfaces
base4Vertices = ((-0.4, 2.5, 0.65), (0.4, 2.5, 0.65), (0.65, 2.5, 0.4), (0.65, 2.5, -0.4),
                 (0.4, 2.5, -0.65), (-0.4, 2.5, -0.65), (-0.65, 2.5, -0.4), (-0.65, 2.5, 0.4),
                 (-0.4, 2.63, 0.65), (0.4, 2.63, 0.65), (0.65, 2.63, 0.4), (0.65, 2.63, -0.4),
                 (0.4, 2.63, -0.65), (-0.4, 2.63, -0.65), (-0.65, 2.63, -0.4), (-0.65, 2.63, 0.4))
base4Edges = octaEdges
base4Surfaces = octaSurfaces

#############################################       block       ########################################################
block1Vertices = ((-0.9, -3, 0.9), (0.9, -3, 0.9), (0.9, -3, -0.9), (-0.9, -3, -0.9),
                  (-0.7, -1.5, 0.7), (0.7, -1.5, 0.7), (0.7, -1.5, -0.7), (-0.7, -1.5, -0.7))
block1Edges = cubeEdges
block1Surfaces = cubeSurfaces
block2Vertices = ((-0.6, -1.4, 0.67), (0.6, -1.4, 0.67), (0.6, -1.4, -0.67), (-0.6, -1.4, -0.67),
                  (-0.6, 1.6, 0.67), (0.6, 1.6, 0.67), (0.6, 1.6, -0.67), (-0.6, 1.6, -0.67))
block2Edges = cubeEdges
block2Surfaces = cubeSurfaces
lineVertices = ((0, 0.75, 0.67), (0, 1.05, 0.67), (0.22, 0.75, 0.67),
                (0, 0.75, -0.67), (0, 1.05, -0.67), (-0.22, 0.75, -0.67),
                (-0.6, 0.75, 0), (-0.6, 1.05, 0), (-0.6, 0.75, 0.22),
                (0.6, 0.75, 0), (0.6, 1.05, 0), (0.6, 0.75, -0.22))
lineEdges = ((0, 1), (0, 2), (3, 4), (3, 5), (6, 7), (6, 8), (9, 10), (9, 11))
block3Vertices = ((-0.4, 1.7, 0.6), (0.4, 1.7, 0.6), (0.6, 1.7, 0.4), (0.6, 1.7, -0.4),
                  (0.4, 1.7, -0.6), (-0.4, 1.7, -0.6), (-0.6, 1.7, -0.4), (-0.6, 1.7, 0.4),
                  (-0.4, 2.5, 0.6), (0.4, 2.5, 0.6), (0.6, 2.5, 0.4), (0.6, 2.5, -0.4),
                  (0.4, 2.5, -0.6), (-0.4, 2.5, -0.6), (-0.6, 2.5, -0.4), (-0.6, 2.5, 0.4))
block3Edges = octaEdges
block3Surfaces = octaSurfaces

##############################################      stair      ########################################################
stair1Vertices = ((-1, -3.1, 2.9), (1, -3.1, 2.9), (1, -3.1, 2.7), (-1, -3.1, 2.7),
                  (-1, -3.7, 2.9), (1, -3.7, 2.9), (1, -3.7, 2.7), (-1, -3.7, 2.7))
stair1Edges = cubeEdges
stair1Surfaces = cubeSurfaces
stair2Vertices = ((-1, -3.3, 3.1), (1, -3.3, 3.1), (1, -3.3, 2.9), (-1, -3.3, 2.9),
                  (-1, -3.7, 3.1), (1, -3.7, 3.1), (1, -3.7, 2.9), (-1, -3.7, 2.9))
stair2Edges = cubeEdges
stair2Surfaces = cubeSurfaces
stair3Vertices = ((-1, -3.5, 3.3), (1, -3.5, 3.3), (1, -3.5, 3.1), (-1, -3.5, 3.1),
                  (-1, -3.7, 3.3), (1, -3.7, 3.3), (1, -3.7, 3.1), (-1, -3.7, 3.1))
stair3Edges = cubeEdges
stair3Surfaces = cubeSurfaces
stair4Vertices = ((-1, -3.1, -2.9), (1, -3.1, -2.9), (1, -3.1, -2.7), (-1, -3.1, -2.7),
                  (-1, -3.7, -2.9), (1, -3.7, -2.9), (1, -3.7, -2.7), (-1, -3.7, -2.7))
stair4Edges = cubeEdges
stair4Surfaces = cubeSurfaces
stair5Vertices = ((-1, -3.3, -3.1), (1, -3.3, -3.1), (1, -3.3, -2.9), (-1, -3.3, -2.9),
                  (-1, -3.7, -3.1), (1, -3.7, -3.1), (1, -3.7, -2.9), (-1, -3.7, -2.9))
stair5Edges = cubeEdges
stair5Surfaces = cubeSurfaces
stair6Vertices = ((-1, -3.5, -3.3), (1, -3.5, -3.3), (1, -3.5, -3.1), (-1, -3.5, -3.1),
                  (-1, -3.7, -3.3), (1, -3.7, -3.3), (1, -3.7, -3.1), (-1, -3.7, -3.1))
stair6Edges = cubeEdges
stair6Surfaces = cubeSurfaces

###############################################       gate       #######################################################
gate1Vertices = ((-2.7, -2.25, 1), (-1, -2.25, 2.7), (-0.95, -2.25, 2.65), (-2.65, -2.25, 0.95),
                 (-2.7, -2.3, 1), (-1, -2.3, 2.7), (-0.95, -2.3, 2.65), (-2.65, -2.3, 0.95),
                 (-2.7, -2.25, -1), (-2.7, -2.25, 1), (-2.65, -2.25, 1), (-2.65, -2.25, -1),
                 (-2.7, -2.3, -1), (-2.7, -2.3, 1), (-2.65, -2.3, 1), (-2.65, -2.3, -1),
                 (-1, -2.25, -2.7), (-2.7, -2.25, -1), (-2.65, -2.25, -0.95), (-1, -2.25, -2.65),
                 (-1, -2.3, -2.7), (-2.7, -2.3, -1), (-2.65, -2.3, -0.95), (-1, -2.3, -2.65),
                 (-1, -3.1, 2.7), (-1, -3.1, 2.65), (-1.05, -3.1, 2.65), (-1.05, -3.1, 2.7),
                 (-1, -2.3, 2.7), (-1, -2.3, 2.65), (-1.05, -2.3, 2.65), (-1.05, -2.3, 2.7),
                 (-2.7, -3.1, 1), (-2.65, -3.1, 1), (-2.65, -3.1, 0.95), (-2.7, -3.1, 0.95),
                 (-2.7, -2.3, 1), (-2.65, -2.3, 1), (-2.65, -2.3, 0.95), (-2.7, -2.3, 0.95),
                 (-2.7, -3.1, -1), (-2.65, -3.1, -1), (-2.65, -3.1, -0.95), (-2.7, -3.1, -0.95),
                 (-2.7, -2.3, -1), (-2.65, -2.3, -1), (-2.65, -2.3, -0.95), (-2.7, -2.3, -0.95),
                 (-1, -3.1, -2.7), (-0.95, -3.1, -2.7), (-0.95, -3.1, -2.65), (-1, -3.1, -2.65),
                 (-1, -2.3, -2.7), (-0.95, -2.3, -2.7), (-0.95, -2.3, -2.65), (-1, -2.3, -2.65),
                 (-1, -3.7, 3.35), (-1, -3.7, 3.3), (-1.05, -3.7, 3.3), (-1.05, -3.7, 3.35),
                 (-1, -2.9, 3.35), (-1, -2.9, 3.3), (-1.05, -2.9, 3.3), (-1.05, -2.9, 3.35),
                 (-1, -3.7, -3.35), (-1, -3.7, -3.3), (-1.05, -3.7, -3.3), (-1.05, -3.7, -3.35),
                 (-1, -2.9, -3.35), (-1, -2.9, -3.3), (-1.05, -2.9, -3.3), (-1.05, -2.9, -3.35),
                 (-1, -2.3, 2.65), (-1.05, -2.3, 2.65), (-1.05, -2.35, 2.65), (-1, -2.35, 2.65),
                 (-1, -2.9, 3.35), (-1.05, -2.9, 3.35), (-1, -2.95, 3.35), (-1.05, -2.95, 3.35),
                 (-1, -2.3, -2.65), (-1.05, -2.3, -2.65), (-1.05, -2.35, -2.65), (-1, -2.35, -2.65),
                 (-1, -2.9, -3.35), (-1.05, -2.9, -3.35), (-1, -2.95, -3.35), (-1.05, -2.95, -3.35),
                 (-2.7, -2.55, 1), (-1, -2.55, 2.7), (-1, -2.6, 2.7), (-2.7, -2.6, 1),
                 (-2.7, -2.75, 1), (-1, -2.75, 2.7), (-1, -2.8, 2.7), (-2.7, -2.8, 1),
                 (-2.7, -2.55, -1), (-2.7, -2.55, 1), (-2.7, -2.6, 1), (-2.7, -2.6, -1),
                 (-2.7, -2.75, -1), (-2.7, -2.75, 1), (-2.7, -2.8, 1), (-2.7, -2.8, -1),
                 (-1, -2.55, -2.7), (-2.7, -2.55, -1), (-2.7, -2.6, -1), (-1, -2.6, -2.7),
                 (-1, -2.75, -2.7), (-2.7, -2.75, -1), (-2.7, -2.8, -1), (-1, -2.8, -2.7),
                 (-1, -2.5, 2.65), (-1, -2.55, 2.65), (-1, -3.15, 3.35), (-1, -3.1, 3.35),
                 (-1, -2.7, 2.65), (-1, -2.75, 2.65), (-1, -3.35, 3.35), (-1, -3.3, 3.35),
                 (-1, -2.5, -2.65), (-1, -2.55, -2.65), (-1, -3.15, -3.35), (-1, -3.1, -3.35),
                 (-1, -2.7, -2.65), (-1, -2.75, -2.65), (-1, -3.35, -3.35), (-1, -3.3, -3.35))
gate1Edges = gateEdges
gate1Surfaces = gateSurfaces
gate2Vertices = ((2.7, -2.25, 1), (1, -2.25, 2.7), (0.95, -2.25, 2.65), (2.65, -2.25, 0.95),
                 (2.7, -2.3, 1), (1, -2.3, 2.7), (0.95, -2.3, 2.65), (2.65, -2.3, 0.95),
                 (2.7, -2.25, -1), (2.7, -2.25, 1), (2.65, -2.25, 1), (2.65, -2.25, -1),
                 (2.7, -2.3, -1), (2.7, -2.3, 1), (2.65, -2.3, 1), (2.65, -2.3, -1),
                 (1, -2.25, -2.7), (2.7, -2.25, -1), (2.65, -2.25, -0.95), (1, -2.25, -2.65),
                 (1, -2.3, -2.7), (2.7, -2.3, -1), (2.65, -2.3, -0.95), (1, -2.3, -2.65),
                 (1, -3.1, 2.7), (1, -3.1, 2.65), (1.05, -3.1, 2.65), (1.05, -3.1, 2.7),
                 (1, -2.3, 2.7), (1, -2.3, 2.65), (1.05, -2.3, 2.65), (1.05, -2.3, 2.7),
                 (2.7, -3.1, 1), (2.65, -3.1, 1), (2.65, -3.1, 0.95), (2.7, -3.1, 0.95),
                 (2.7, -2.3, 1), (2.65, -2.3, 1), (2.65, -2.3, 0.95), (2.7, -2.3, 0.95),
                 (2.7, -3.1, -1), (2.65, -3.1, -1), (2.65, -3.1, -0.95), (2.7, -3.1, -0.95),
                 (2.7, -2.3, -1), (2.65, -2.3, -1), (2.65, -2.3, -0.95), (2.7, -2.3, -0.95),
                 (1, -3.1, -2.7), (0.95, -3.1, -2.7), (0.95, -3.1, -2.65), (1, -3.1, -2.65),
                 (1, -2.3, -2.7), (0.95, -2.3, -2.7), (0.95, -2.3, -2.65), (1, -2.3, -2.65),
                 (1, -3.7, 3.35), (1, -3.7, 3.3), (1.05, -3.7, 3.3), (1.05, -3.7, 3.35),
                 (1, -2.9, 3.35), (1, -2.9, 3.3), (1.05, -2.9, 3.3), (1.05, -2.9, 3.35),
                 (1, -3.7, -3.35), (1, -3.7, -3.3), (1.05, -3.7, -3.3), (1.05, -3.7, -3.35),
                 (1, -2.9, -3.35), (1, -2.9, -3.3), (1.05, -2.9, -3.3), (1.05, -2.9, -3.35),
                 (1, -2.3, 2.65), (1.05, -2.3, 2.65), (1.05, -2.35, 2.65), (1, -2.35, 2.65),
                 (1, -2.9, 3.35), (1.05, -2.9, 3.35), (1, -2.95, 3.35), (1.05, -2.95, 3.35),
                 (1, -2.3, -2.65), (1.05, -2.3, -2.65), (1.05, -2.35, -2.65), (1, -2.35, -2.65),
                 (1, -2.9, -3.35), (1.05, -2.9, -3.35), (1, -2.95, -3.35), (1.05, -2.95, -3.35),
                 (2.7, -2.55, 1), (1, -2.55, 2.7), (1, -2.6, 2.7), (2.7, -2.6, 1),
                 (2.7, -2.75, 1), (1, -2.75, 2.7), (1, -2.8, 2.7), (2.7, -2.8, 1),
                 (2.7, -2.55, -1), (2.7, -2.55, 1), (2.7, -2.6, 1), (2.7, -2.6, -1),
                 (2.7, -2.75, -1), (2.7, -2.75, 1), (2.7, -2.8, 1), (2.7, -2.8, -1),
                 (1, -2.55, -2.7), (2.7, -2.55, -1), (2.7, -2.6, -1), (1, -2.6, -2.7),
                 (1, -2.75, -2.7), (2.7, -2.75, -1), (2.7, -2.8, -1), (1, -2.8, -2.7),
                 (1, -2.5, 2.65), (1, -2.55, 2.65), (1, -3.15, 3.35), (1, -3.1, 3.35),
                 (1, -2.7, 2.65), (1, -2.75, 2.65), (1, -3.35, 3.35), (1, -3.3, 3.35),
                 (1, -2.5, -2.65), (1, -2.55, -2.65), (1, -3.15, -3.35), (1, -3.1, -3.35),
                 (1, -2.7, -2.65), (1, -2.75, -2.65), (1, -3.35, -3.35), (1, -3.3, -3.35))
gate2Edges = gateEdges
gate2Surfaces = gateSurfaces

############################################      top       ############################################################
smallBlock1Vertices = ((-0.7, 1.7, 0.7), (-0.55, 1.7, 0.7), (-0.55, 1.7, 0.55), (-0.7, 1.7, 0.55),
                       (-0.7, 1.9, 0.7), (-0.55, 1.9, 0.7), (-0.55, 1.9, 0.55), (-0.7, 1.9, 0.55))
smallBlock1Edges = cubeEdges
smallBlock1Surfaces = cubeSurfaces
smallBlock2Vertices = ((0.7, 1.7, 0.7), (0.55, 1.7, 0.7), (0.55, 1.7, 0.55), (0.7, 1.7, 0.55),
                       (0.7, 1.9, 0.7), (0.55, 1.9, 0.7), (0.55, 1.9, 0.55), (0.7, 1.9, 0.55))
smallBlock2Edges = cubeEdges
smallBlock2Surfaces = cubeSurfaces
smallBlock3Vertices = ((0.7, 1.7, -0.7), (0.55, 1.7, -0.7), (0.55, 1.7, -0.55), (0.7, 1.7, -0.55),
                       (0.7, 1.9, -0.7), (0.55, 1.9, -0.7), (0.55, 1.9, -0.55), (0.7, 1.9, -0.55))
smallBlock3Edges = cubeEdges
smallBlock3Surfaces = cubeSurfaces
smallBlock4Vertices = ((-0.7, 1.7, -0.7), (-0.55, 1.7, -0.7), (-0.55, 1.7, -0.55), (-0.7, 1.7, -0.55),
                       (-0.7, 1.9, -0.7), (-0.55, 1.9, -0.7), (-0.55, 1.9, -0.55), (-0.7, 1.9, -0.55))
smallBlock4Edges = cubeEdges
smallBlock4Surfaces = cubeSurfaces
smallPyramid1Vertices = ((-0.625, 2, 0.625), (-0.7, 1.9, 0.7), (-0.55, 1.9, 0.7), (-0.55, 1.9, 0.55), (-0.7, 1.9, 0.55))
smallPyramid1Edges = pyramidEdges
smallPyramid1Surfaces = pyramidSurfaces
smallPyramid2Vertices = ((0.625, 2, 0.625), (0.7, 1.9, 0.7), (0.55, 1.9, 0.7), (0.55, 1.9, 0.55), (0.7, 1.9, 0.55))
smallPyramid2Edges = pyramidEdges
smallPyramid2Surfaces = pyramidSurfaces
smallPyramid3Vertices = ((0.625, 2, -0.625), (0.7, 1.9, -0.7), (0.55, 1.9, -0.7), (0.55, 1.9, -0.55), (0.7, 1.9, -0.55))
smallPyramid3Edges = pyramidEdges
smallPyramid3Surfaces = pyramidSurfaces
smallPyramid4Vertices = ((-0.625, 2, -0.625), (-0.7, 1.9, -0.7),
                         (-0.55, 1.9, -0.7), (-0.55, 1.9, -0.55), (-0.7, 1.9, -0.55))
smallPyramid4Edges = pyramidEdges
smallPyramid4Surfaces = pyramidSurfaces
topVertices = ((-0.3, 2.63, 0.425), (0, 2.63, 0.525), (0.3, 2.63, 0.425), (0.425, 2.63, 0.3), (0.525, 2.63, 0), (0.425, 2.63, -0.3),
               (0.3, 2.63, -0.425), (0, 2.63, -0.525), (-0.3, 2.63, -0.425), (-0.425, 2.63, -0.3), (-0.525, 2.63, 0), (-0.425, 2.63, 0.3),
               (-0.3, 3.1, 0.425), (0, 3.1, 0.525), (0.3, 3.1, 0.425), (0.425, 3.1, 0.3), (0.525, 3.1, 0), (0.425, 3.1, -0.3),
               (0.3, 3.1, -0.425), (0, 3.1, -0.525), (-0.3, 3.1, -0.425), (-0.425, 3.1, -0.3), (-0.525, 3.1, 0), (-0.425, 3.1, 0.3),
               (-0.15, 3.25, 0.3), (0, 3.25, 0.4), (0.15, 3.25, 0.3), (0.3, 3.25, 0.15), (0.4, 3.25, 0), (0.3, 3.25, -0.15),
               (0.15, 3.25, -0.3), (0, 3.25, -0.4), (-0.15, 3.25, -0.3), (-0.3, 3.25, -0.15), (-0.4, 3.25, 0), (-0.3, 3.25, 0.15),
               (0, 3.35, 0), (0, 3.35, 0.05), (0.05, 3.35, 0), (0, 3.35, -0.05), (0, 3.35, -0.05), (0, 3.85, 0))
topEdges = ((0, 1), (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8), (8, 9), (9, 10), (10, 11), (11, 0),
            (0, 12), (1, 13), (2, 14), (3, 15), (4, 16), (5, 17), (6, 18), (7, 19), (8, 20), (9, 21), (10, 22), (11, 23),
            (12, 24), (13, 25), (14, 26), (15, 27), (16, 28), (17, 29), (18, 30), (19, 31), (20, 32), (21, 33), (22, 34), (23, 35),
            (24, 36), (25, 36), (26, 36), (27, 36), (28, 36), (29, 36), (30, 36), (31, 36), (32, 36), (33, 36), (34, 36), (35, 36),
            (37, 38), (38, 39), (39, 40), (40, 37), (37, 41), (38, 41), (39, 41), (40, 41))
topSurfaces = ((0, 12, 13, 1), (1, 13, 14, 2), (2, 14, 15, 3), (3, 15, 16, 4), (4, 16, 17, 5), (5, 17, 18, 6),
               (6, 18, 19, 7), (7, 19, 20, 8), (8, 20, 21, 9), (9, 21, 22, 10), (10, 22, 23, 11), (11, 23, 12, 0),
               (0+12, 12+12, 13+12, 1+12), (1+12, 13+12, 14+12, 2+12), (2+12, 14+12, 15+12, 3+12), (3+12, 15+12, 16+12, 4+12), (4+12, 16+12, 17+12, 5+12), (5+12, 17+12, 18+12, 6+12),
               (6+12, 18+12, 19+12, 7+12), (7+12, 19+12, 20+12, 8+12), (8+12, 20+12, 21+12, 9+12), (9+12, 21+12, 22+12, 10+12), (10+12, 22+12, 23+12, 11+12), (11+12, 23+12, 12+12, 0+12),
               (41, 37, 38), (41, 8, 39), (41, 39, 40), (41, 40, 37))

################################################       road       ###################################################
roadVertices = ((-1, -3.7, 3.3), (1, -3.7, 3.3), (1, -3.7, 13), (-1, -3.7, 13),
                (-1, -3.7, -3.3), (1, -3.7, -3.3), (1, -3.7, -13), (-1, -3.7, -13))
roadEdges = ((0, 1), (1, 2), (2, 3), (3, 0), (4, 5), (5, 6), (6, 7), (7, 4))
roadSurfaces = ((0, 1, 2, 3), (4, 5, 6, 7))

############################################       background       ####################################################
def background():
    rectVertices = ((-23, 0, -25), (-23, -10, -25), (23, -10, -25), (23, 0, -25))
    rectSurfaces = ((0, 1, 2, 3), (3, 2, 1, 0))
    glPointSize(5)
    glBegin(GL_QUADS)
    glColor3f(0, 0.2, 0.4)
    glVertex3f(-30, 30, -40)
    glColor3f(1, 1, 0.4)
    glVertex3f(-30, -13, -40)
    glColor3f(0, 0.2, 0.4)
    glVertex3f(30, -13, -40)
    glColor3f(0, 0.2, 0.4)
    glVertex3f(30, 30, -40)
    glEnd()
    glBegin(GL_QUADS)
    for rectSurface in rectSurfaces:
        for rectVertex in rectSurface:
            glColor3fv((0, 0.4, 0))
            glVertex3fv(rectVertices[rectVertex])
    glEnd()
    glBegin(GL_TRIANGLE_FAN)
    for i in range(360):
        glColor3f(0, 0.4, 0)
        degInRad = i * DEG2RAD
        glVertex3f(math.cos(degInRad) * 5 - 23, math.sin(degInRad) * 5 - 0.5, -25)
    glEnd()
    glBegin(GL_TRIANGLE_FAN)
    for i in range(360):
        glColor3f(0, 0.4, 0)
        degInRad = i * DEG2RAD
        glVertex3f(math.cos(degInRad) * 5 - 20, math.sin(degInRad) * 5 - 1, -25)
    glEnd()
    glBegin(GL_TRIANGLE_FAN)
    for i in range(360):
        glColor3f(0, 0.4, 0)
        degInRad = i * DEG2RAD
        glVertex3f(math.cos(degInRad) * 3 - 15, math.sin(degInRad) * 3, -25)
    glEnd()
    glBegin(GL_TRIANGLE_FAN)
    for i in range(360):
        glColor3f(0, 0.4, 0)
        degInRad = i * DEG2RAD
        glVertex3f(math.cos(degInRad) * 3 - 11, math.sin(degInRad) * 2.5, -25)
    glEnd()
    glBegin(GL_TRIANGLE_FAN)
    for i in range(360):
        glColor3f(0, 0.4, 0)
        degInRad = i * DEG2RAD
        glVertex3f(math.cos(degInRad) * 3 - 8, math.sin(degInRad) * 3 - 1, -25)
    glEnd()
    glBegin(GL_TRIANGLE_FAN)
    for i in range(360):
        glColor3f(0, 0.4, 0)
        degInRad = i * DEG2RAD
        glVertex3f(math.cos(degInRad) * 3 - 4, math.sin(degInRad) * 3, -25)
    glEnd()
    glBegin(GL_TRIANGLE_FAN)
    for i in range(360):
        glColor3f(0, 0.4, 0)
        degInRad = i * DEG2RAD
        glVertex3f(math.cos(degInRad) * 3, math.sin(degInRad) * 3, -25)
    glEnd()
    glBegin(GL_TRIANGLE_FAN)
    for i in range(360):
        glColor3f(0, 0.4, 0)
        degInRad = i * DEG2RAD
        glVertex3f(math.cos(degInRad) * 3 + 3, math.sin(degInRad) * 3 - 2, -25)
    glEnd()
    glBegin(GL_TRIANGLE_FAN)
    for i in range(360):
        glColor3f(0, 0.4, 0)
        degInRad = i * DEG2RAD
        glVertex3f(math.cos(degInRad) * 3 + 7, math.sin(degInRad) * 3 - 1.5, -25)
    glEnd()
    glBegin(GL_TRIANGLE_FAN)
    for i in range(360):
        glColor3f(0, 0.4, 0)
        degInRad = i * DEG2RAD
        glVertex3f(math.cos(degInRad) * 3 + 11, math.sin(degInRad) * 3 - 1.5, -25)
    glEnd()
    glBegin(GL_TRIANGLE_FAN)
    for i in range(360):
        glColor3f(0, 0.4, 0)
        degInRad = i * DEG2RAD
        glVertex3f(math.cos(degInRad) * 3 + 15, math.sin(degInRad) * 3 - 2.5, -25)
    glEnd()
    glBegin(GL_TRIANGLE_FAN)
    for i in range(360):
        glColor3f(0, 0.4, 0)
        degInRad = i * DEG2RAD
        glVertex3f(math.cos(degInRad) * 3 + 19, math.sin(degInRad) * 3 - 0.5, -25)
    glEnd()

#############################################      backBuilding      ##################################################
def backBuilding1():
    backBlock1Vertices = ((-22, 1, -25), (-20, 1, -25), (-20, 6, -25), (-22, 6, -25),
                          (-21, 1, -30), (-19, 1, -30), (-19, 6, -30), (-21, 6, -30))
    backBlock1Edges = cubeEdges
    backBlock1Surfaces = cubeSurfaces
    backBlock2Vertices = ((-21, 1, -30), (-19, 1, -30), (-19, 7.5, -30), (-21, 7.5, -30),
                          (-20, 1, -35), (-18, 1, -35), (-18, 7.5, -35), (-20, 7.5, -35))
    backBlock2Edges = cubeEdges
    backBlock2Surfaces = cubeSurfaces
    backBlock3Vertices = ((-20, 1, -35), (-16, 1, -35), (-16, 9, -35), (-20, 9, -35),
                          (-20, 1, -39), (-16, 1, -39), (-16, 9, -39), (-20, 9, -39))
    backBlock3Edges = cubeEdges
    backBlock3Surfaces = cubeSurfaces
    backBlock4Vertices = ((-6, 1, -25), (-4, 1, -25), (-4, 6, -25), (-6, 6, -25),
                          (-7, 1, -30), (-5, 1, -30), (-5, 6, -30), (-7, 6, -30))
    backBlock4Edges = cubeEdges
    backBlock4Surfaces = cubeSurfaces
    backBlock5Vertices = ((-7, 1, -30), (-5, 1, -30), (-5, 7.5, -30), (-7, 7.5, -30),
                          (-8, 1, -35), (-6, 1, -35), (-6, 7.5, -35), (-8, 7.5, -35))
    backBlock5Edges = cubeEdges
    backBlock5Surfaces = cubeSurfaces
    backBlock6Vertices = ((-10, 1, -35), (-6, 1, -35), (-6, 9, -35), (-10, 9, -35),
                          (-10, 1, -39), (-6, 1, -39), (-6, 9, -39), (-10, 9, -39))
    backBlock6Edges = cubeEdges
    backBlock6Surfaces = cubeSurfaces
    backBlock7Vertices = ((-16, 1, -35), (-10, 1, -35), (-10, 3.8, -35), (-16, 3.8, -35),
                          (-16, 1, -39), (-10, 1, -39), (-10, 3.8, -39), (-16, 3.8, -39))
    backBlock7Edges = cubeEdges
    backBlock7Surfaces = cubeSurfaces
    backBlock8Vertices = ((-21.9, 6, -25.1), (-20.1, 6, -25.1), (-20.1, 6.2, -25.1), (-21.9, 6.2, -25.1),
                          (-20.9, 6, -29.9), (-19.1, 6, -29.9), (-19.1, 6.2, -29.9), (-20.9, 6.2, -29.9))
    backBlock8Edges = cubeEdges
    backBlock8Surfaces = cubeSurfaces
    backBlock9Vertices = ((-20.9, 7.5, -30.1), (-19.1, 7.5, -30.1), (-19.1, 7.7, -30.1), (-20.9, 7.7, -30.1),
                          (-19.9, 7.5, -34.9), (-18.1, 7.5, -34.9), (-18.1, 7.7, -34.9), (-19.9, 7.7, -34.9))
    backBlock9Edges = cubeEdges
    backBlock9Surfaces = cubeSurfaces
    backBlock10Vertices = ( (-16.1, 9, -35), (-19.9, 9, -35.1),(-19.9, 9.2, -35), (-16.1, 9.2, -35),
                          (-16.1, 9, -38.9), (-19.9, 9, -38.9), (-19.9, 9.2, -38.9), (-16.1, 9.2, -38.9))
    backBlock10Edges = cubeEdges
    backBlock10Surfaces = cubeSurfaces
    backBlock11Vertices = ((-5.9, 6, -25.1), (-4.1, 6, -25.1), (-4.1, 6.2, -25.1), (-5.9, 6.2, -25.1),
                          (-6.9, 6, -29.9), (-5.1, 6, -29.9), (-5.1, 6.2, -29.9), (-6.9, 6.2, -29.9))
    backBlock11Edges = cubeEdges
    backBlock11Surfaces = cubeSurfaces
    backBlock12Vertices = ((-6.9, 7.5, -30.1), (-5.1, 7.5, -30.1), (-5.1, 7.7, -30.1), (-6.9, 7.7, -30.1),
                          (-7.9, 7.5, -34.9), (-6.1, 7.5, -34.9), (-6.1, 7.7, -34.9), (-7.9, 7.7, -34.9))
    backBlock12Edges = cubeEdges
    backBlock12Surfaces = cubeSurfaces
    backBlock13Vertices = ((-9.9, 9, -35.1), (-6.1, 9, -35.1), (-6.1, 9.2, -35.1), (-9.9, 9.2, -35.1),
                           (-9.9, 9, -38.9), (-6.1, 9, -38.9), (-6.1, 9.2, -38.9), (-9.9, 9.2, -38.9))
    backBlock13Edges = cubeEdges
    backBlock13Surfaces = cubeSurfaces
    backPyramid1Vertices = ((-20.5, 6.8, -27.5), (-21.9, 6.2, -25.1), (-20.1, 6.2, -25.1), (-19.1, 6.2, -29.9), (-20.9, 6.2, -29.9))
    backPyramid1Edges = pyramidEdges
    backPyramid1Surfaces = pyramidSurfaces
    backPyramid2Vertices =  ((-19.5, 8.4, -32.5), (-20.9, 7.7, -30.1), (-19.1, 7.7, -30.1), (-18.1, 7.7, -34.9), (-19.9, 7.7, -34.9))
    backPyramid2Edges = pyramidEdges
    backPyramid2Surfaces = pyramidSurfaces
    backPyramid3Vertices = ((-18, 10.5, -37), (-20.5, 9.2, -34.5), (-15.5, 9.2, -34.5), (-15.5, 9.2, -39.5), (-20.5, 9.2, -39.5))
    backPyramid3Edges = pyramidEdges
    backPyramid3Surfaces = pyramidSurfaces
    backPyramid4Vertices = ((-5.5, 6.8, -27.5), (-4.1, 6.2, -25.1), (-5.9, 6.2, -25.1), (-5.1, 6.2, -29.9), (-6.9, 6.2, -29.9))
    backPyramid4Edges = pyramidEdges
    backPyramid4Surfaces = pyramidSurfaces
    backPyramid5Vertices = ((-6.5, 8.4, -32.5), (-5.1, 7.7, -30.1), (-6.9, 7.7, -30.1), (-6.1, 7.7, -34.9), (-7.9, 7.7, -34.9))
    backPyramid5Edges = pyramidEdges
    backPyramid5Surfaces = pyramidSurfaces
    backPyramid6Vertices = ((-8, 10.5, -37), (-10.4, 9.2, -34.6), (-5.6, 9.2, -34.6), (-5.6, 9.2, -39.4), (-10.4, 9.2, -39.4))
    backPyramid6Edges = pyramidEdges
    backPyramid6Surfaces = pyramidSurfaces
    glBegin(GL_QUADS)
    for backBlock1Surface in backBlock1Surfaces:
        for backBlock1Vertex in backBlock1Surface:
            glColor3fv((1, 1, 0.8))
            glVertex3fv(backBlock1Vertices[backBlock1Vertex])
    for backBlock2Surface in backBlock2Surfaces:
        for backBlock2Vertex in backBlock2Surface:
            glColor3fv((1, 1, 0.8))
            glVertex3fv(backBlock2Vertices[backBlock2Vertex])
    for backBlock3Surface in backBlock3Surfaces:
        for backBlock3Vertex in backBlock3Surface:
            glColor3fv((1, 1, 0.8))
            glVertex3fv(backBlock3Vertices[backBlock3Vertex])
    for backPyramid1Surface in backPyramid1Surfaces:
        for backPyramid1Vertex in backPyramid1Surface:
            glColor3fv((1, 0, 0))
            glVertex3fv(backPyramid1Vertices[backPyramid1Vertex])
    for backPyramid2Surface in backPyramid2Surfaces:
        for backPyramid2Vertex in backPyramid2Surface:
            glColor3fv((1, 0, 0))
            glVertex3fv(backPyramid2Vertices[backPyramid2Vertex])
    for backPyramid3Surface in backPyramid3Surfaces:
        for backPyramid3Vertex in backPyramid3Surface:
            glColor3fv((1, 0, 0))
            glVertex3fv(backPyramid3Vertices[backPyramid3Vertex])
    for backBlock8Surface in backBlock8Surfaces:
        for backBlock8Vertex in backBlock8Surface:
            glColor3fv((0, 1, 1))
            glVertex3fv(backBlock8Vertices[backBlock8Vertex])
    for backBlock9Surface in backBlock9Surfaces:
        for backBlock9Vertex in backBlock9Surface:
            glColor3fv((0, 1, 1))
            glVertex3fv(backBlock9Vertices[backBlock9Vertex])
    for backBlock10Surface in backBlock10Surfaces:
        for backBlock10Vertex in backBlock10Surface:
            glColor3fv((0, 1, 1))
            glVertex3fv(backBlock10Vertices[backBlock10Vertex])
    for backBlock7Surface in backBlock7Surfaces:
        for backBlock7Vertex in backBlock7Surface:
            glColor3fv((1, 1, 0.8))
            glVertex3fv(backBlock7Vertices[backBlock7Vertex])
    for backBlock4Surface in backBlock4Surfaces:
        for backBlock4Vertex in backBlock4Surface:
            glColor3fv((1, 1, 0.8))
            glVertex3fv(backBlock4Vertices[backBlock4Vertex])
    for backBlock5Surface in backBlock5Surfaces:
        for backBlock5Vertex in backBlock5Surface:
            glColor3fv((1, 1, 0.8))
            glVertex3fv(backBlock5Vertices[backBlock5Vertex])
    for backBlock6Surface in backBlock6Surfaces:
        for backBlock6Vertex in backBlock6Surface:
            glColor3fv((1, 1, 0.8))
            glVertex3fv(backBlock6Vertices[backBlock6Vertex])
    for backPyramid4Surface in backPyramid4Surfaces:
        for backPyramid4Vertex in backPyramid4Surface:
            glColor3fv((1, 0, 0))
            glVertex3fv(backPyramid4Vertices[backPyramid4Vertex])
    for backPyramid5Surface in backPyramid5Surfaces:
        for backPyramid5Vertex in backPyramid5Surface:
            glColor3fv((1, 0, 0))
            glVertex3fv(backPyramid5Vertices[backPyramid5Vertex])
    for backPyramid6Surface in backPyramid6Surfaces:
        for backPyramid6Vertex in backPyramid6Surface:
            glColor3fv((1, 0, 0))
            glVertex3fv(backPyramid6Vertices[backPyramid6Vertex])
    for backBlock11Surface in backBlock11Surfaces:
        for backBlock11Vertex in backBlock11Surface:
            glColor3fv((0, 1, 1))
            glVertex3fv(backBlock11Vertices[backBlock11Vertex])
    for backBlock12Surface in backBlock12Surfaces:
        for backBlock12Vertex in backBlock12Surface:
            glColor3fv((0, 1, 1))
            glVertex3fv(backBlock12Vertices[backBlock12Vertex])
    for backBlock13Surface in backBlock13Surfaces:
        for backBlock13Vertex in backBlock13Surface:
            glColor3fv((0, 1, 1))
            glVertex3fv(backBlock13Vertices[backBlock13Vertex])
    glEnd()
    glBegin(GL_LINES)
    for backBlock1Edge in backBlock1Edges:
        for backBlock1Vertex in backBlock1Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(backBlock1Vertices[backBlock1Vertex])
    for backBlock2Edge in backBlock2Edges:
        for backBlock2Vertex in backBlock2Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(backBlock2Vertices[backBlock2Vertex])
    for backBlock3Edge in backBlock3Edges:
        for backBlock3Vertex in backBlock3Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(backBlock3Vertices[backBlock3Vertex])
    for backBlock8Edge in backBlock8Edges:
        for backBlock8Vertex in backBlock8Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(backBlock8Vertices[backBlock8Vertex])
    for backBlock9Edge in backBlock9Edges:
        for backBlock9Vertex in backBlock9Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(backBlock9Vertices[backBlock9Vertex])
    for backBlock10Edge in backBlock10Edges:
        for backBlock10Vertex in backBlock10Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(backBlock10Vertices[backBlock10Vertex])
    for backPyramid1Edge in backPyramid1Edges:
        for backPyramid1Vertex in backPyramid1Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(backPyramid1Vertices[backPyramid1Vertex])
    for backPyramid2Edge in backPyramid2Edges:
        for backPyramid2Vertex in backPyramid2Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(backPyramid2Vertices[backPyramid2Vertex])
    for backPyramid3Edge in backPyramid3Edges:
        for backPyramid3Vertex in backPyramid3Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(backPyramid3Vertices[backPyramid3Vertex])
    for backBlock7Edge in backBlock7Edges:
        for backBlock7Vertex in backBlock7Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(backBlock7Vertices[backBlock7Vertex])
    for backBlock6Edge in backBlock6Edges:
        for backBlock6Vertex in backBlock6Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(backBlock6Vertices[backBlock6Vertex])
    for backBlock5Edge in backBlock5Edges:
        for backBlock5Vertex in backBlock5Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(backBlock5Vertices[backBlock5Vertex])
    for backBlock4Edge in backBlock4Edges:
        for backBlock4Vertex in backBlock4Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(backBlock4Vertices[backBlock4Vertex])
    for backPyramid4Edge in backPyramid4Edges:
        for backPyramid4Vertex in backPyramid4Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(backPyramid4Vertices[backPyramid4Vertex])
    for backPyramid5Edge in backPyramid5Edges:
        for backPyramid5Vertex in backPyramid5Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(backPyramid5Vertices[backPyramid5Vertex])
    for backPyramid6Edge in backPyramid6Edges:
        for backPyramid6Vertex in backPyramid6Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(backPyramid6Vertices[backPyramid6Vertex])
    for backBlock11Edge in backBlock11Edges:
        for backBlock11Vertex in backBlock11Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(backBlock11Vertices[backBlock11Vertex])
    for backBlock12Edge in backBlock12Edges:
        for backBlock12Vertex in backBlock12Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(backBlock12Vertices[backBlock12Vertex])
    for backBlock13Edge in backBlock13Edges:
        for backBlock13Vertex in backBlock13Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(backBlock13Vertices[backBlock13Vertex])
    glEnd()

############################################      lines       #########################################################
def line():
    glBegin(GL_LINES)
    for baseBlockEdge in baseBlockEdges:
        for baseBlockVertex in baseBlockEdge:
            glColor3fv((0, 0, 0))
            glVertex3fv(baseBlockVertices[baseBlockVertex])
    for gate1Edge in gate1Edges:
        for gate1Vertex in gate1Edge:
            glVertex3fv(gate1Vertices[gate1Vertex])
    for gate2Edge in gate2Edges:
        for gate2Vertex in gate2Edge:
            glVertex3fv(gate2Vertices[gate2Vertex])
    for stair1Edge in stair1Edges:
        for stair1Vertex in stair1Edge:
            glVertex3fv(stair1Vertices[stair1Vertex])
    for stair2Edge in stair2Edges:
        for stair2Vertex in stair2Edge:
            glVertex3fv(stair2Vertices[stair2Vertex])
    for stair3Edge in stair3Edges:
        for stair3Vertex in stair3Edge:
            glVertex3fv(stair3Vertices[stair3Vertex])
    for stair4Edge in stair4Edges:
        for stair4Vertex in stair4Edge:
            glVertex3fv(stair4Vertices[stair4Vertex])
    for stair5Edge in stair5Edges:
        for stair5Vertex in stair5Edge:
            glVertex3fv(stair5Vertices[stair5Vertex])
    for stair6Edge in stair6Edges:
        for stair6Vertex in stair6Edge:
            glVertex3fv(stair6Vertices[stair6Vertex])
    for base1Edge in base1Edges:
        for base1Vertex in base1Edge:
            glVertex3fv(base1Vertices[base1Vertex])
    for block1Edge in block1Edges:
        for block1Vertex in block1Edge:
            glVertex3fv(block1Vertices[block1Vertex])
    for base2Edge in base2Edges:
        for base2Vertex in base2Edge:
            glVertex3fv(base2Vertices[base2Vertex])
    for block2Edge in block2Edges:
        for block2Vertex in block2Edge:
            glVertex3fv(block2Vertices[block2Vertex])
    for lineEdge in lineEdges:
        for lineVertex in lineEdge:
            glVertex3fv(lineVertices[lineVertex])
    for base3Edge in base3Edges:
        for base3Vertex in base3Edge:
            glVertex3fv(base3Vertices[base3Vertex])
    for smallBlock1Edge in smallBlock1Edges:
        for smallBlock1Vertex in smallBlock1Edge:
            glVertex3fv(smallBlock1Vertices[smallBlock1Vertex])
    for smallPyramid1Edge in smallPyramid1Edges:
        for smallPyramid1Vertex in smallPyramid1Edge:
            glVertex3fv(smallPyramid1Vertices[smallPyramid1Vertex])
    for smallBlock2Edge in smallBlock2Edges:
        for smallBlock2Vertex in smallBlock2Edge:
            glVertex3fv(smallBlock2Vertices[smallBlock2Vertex])
    for smallPyramid2Edge in smallPyramid2Edges:
        for smallPyramid2Vertex in smallPyramid2Edge:
            glVertex3fv(smallPyramid2Vertices[smallPyramid2Vertex])
    for smallBlock3Edge in smallBlock3Edges:
        for smallBlock3Vertex in smallBlock3Edge:
            glVertex3fv(smallBlock3Vertices[smallBlock3Vertex])
    for smallPyramid3Edge in smallPyramid3Edges:
        for smallPyramid3Vertex in smallPyramid3Edge:
            glVertex3fv(smallPyramid3Vertices[smallPyramid3Vertex])
    for smallBlock4Edge in smallBlock4Edges:
        for smallBlock4Vertex in smallBlock4Edge:
            glVertex3fv(smallBlock4Vertices[smallBlock4Vertex])
    for smallPyramid4Edge in smallPyramid4Edges:
        for smallPyramid4Vertex in smallPyramid4Edge:
            glVertex3fv(smallPyramid4Vertices[smallPyramid4Vertex])
    for block3Edge in block3Edges:
        for block3Vertex in block3Edge:
            glVertex3fv(block3Vertices[block3Vertex])
    for base4Edge in base4Edges:
        for base4Vertex in base4Edge:
            glVertex3fv(base4Vertices[base4Vertex])
    for topEdge in topEdges:
        for topVertex in topEdge:
            glVertex3fv(topVertices[topVertex])
    for roadEdge in roadEdges:
        for roadVertex in roadEdge:
            glVertex3fv(roadVertices[roadVertex])
    for tree1Edge in tree1Edges:
        for tree1Vertex in tree1Edge:
            glVertex3fv(tree1Vertices[tree1Vertex])
    for tree2Edge in tree2Edges:
        for tree2Vertex in tree2Edge:
            glVertex3fv(tree2Vertices[tree2Vertex])
    for tree3Edge in tree3Edges:
        for tree3Vertex in tree3Edge:
            glVertex3fv(tree3Vertices[tree3Vertex])
    for tree4Edge in tree4Edges:
        for tree4Vertex in tree4Edge:
            glVertex3fv(tree4Vertices[tree4Vertex])
    for tree5Edge in tree5Edges:
        for tree5Vertex in tree5Edge:
            glVertex3fv(tree5Vertices[tree5Vertex])
    for tree6Edge in tree6Edges:
        for tree6Vertex in tree6Edge:
            glVertex3fv(tree6Vertices[tree6Vertex])
    for tree7Edge in tree7Edges:
        for tree7Vertex in tree7Edge:
            glVertex3fv(tree7Vertices[tree7Vertex])
    for tree8Edge in tree8Edges:
        for tree8Vertex in tree8Edge:
            glVertex3fv(tree8Vertices[tree8Vertex])
    for leaf1Edge in leaf1Edges:
        for leaf1Vertex in leaf1Edge:
            glVertex3fv(leaf1Vertices[leaf1Vertex])
    for leaf2Edge in leaf2Edges:
        for leaf2Vertex in leaf2Edge:
            glVertex3fv(leaf2Vertices[leaf2Vertex])
    for leaf3Edge in leaf3Edges:
        for leaf3Vertex in leaf3Edge:
            glVertex3fv(leaf3Vertices[leaf3Vertex])
    for leaf4Edge in leaf4Edges:
        for leaf4Vertex in leaf4Edge:
            glVertex3fv(leaf4Vertices[leaf4Vertex])
    glEnd()

###############################################     circle     #######################################################
def circle():
    glBegin(GL_LINE_LOOP)
    for i in range(360):
        glColor3fv((0, 0, 0))
        degInRad = i * DEG2RAD
        glVertex3f(math.cos(degInRad) * radius1, math.sin(degInRad) * radius1 + 0.8, 0.67)
    glEnd()
    glBegin(GL_LINE_LOOP)
    for i in range(360):
        glColor3fv((0, 0, 0))
        degInRad = i * DEG2RAD
        glVertex3f(math.cos(degInRad) * radius1, math.sin(degInRad) * radius1 + 0.8, -0.67)
    glEnd()
    glBegin(GL_LINE_LOOP)
    for i in range(360):
        glColor3fv((0, 0, 0))
        degInRad = i * DEG2RAD
        glVertex3f(-0.6, math.cos(degInRad) * radius1 + 0.8, math.sin(degInRad) * radius1)
    glEnd()
    glBegin(GL_LINE_LOOP)
    for i in range(360):
        glColor3fv((0, 0, 0))
        degInRad = i * DEG2RAD
        glVertex3f(0.6, math.cos(degInRad) * radius1 + 0.8, math.sin(degInRad) * radius1)
    glEnd()
    glBegin(GL_LINE_LOOP)
    for i in range(360):
        glColor3fv((0, 0, 0))
        degInRad = i * DEG2RAD
        glVertex3f(math.cos(degInRad) * radius2, -3.7, math.sin(degInRad) * radius2)
    glEnd()

###############################################     ums logo      ######################################################
def logo1():
    glBegin(GL_TRIANGLE_FAN)
    for i in range(360):
        glColor3f(1, 1, 1)
        degInRad = i * DEG2RAD
        glVertex3f(math.cos(degInRad) * 0.23, math.sin(degInRad) * 0.23 + 2.1, 0.6)
    glEnd()
    glBegin(GL_LINE_LOOP)
    for i in range(360):
        glColor3fv((0, 0, 0))
        degInRad = i * DEG2RAD
        glVertex3f(math.cos(degInRad) * 0.23, math.sin(degInRad) * 0.23 + 2.1, 0.6)
    glEnd()
    glBegin(GL_LINE_LOOP)
    for i in range(360):
        glColor3fv((0, 0, 0))
        degInRad = i * DEG2RAD
        glVertex3f(math.cos(degInRad) * 0.18, math.sin(degInRad) * 0.18 + 2.1, 0.6)
    glEnd()
    logo1Vertices = ((-0.1, 2.22, 0.6), (0.1, 2.22, 0.6), (0.1, 2.12, 0.6), (-0.1, 2.12, 0.6),
                     (-0.09, 2.08, 0.6), (0.09, 2.08, 0.6), (-0.05, 2.03, 0.6), (0.05, 2.03, 0.6),
                     (0, 2, 0.6))
    logo2Vertices = ((-0.08, 2.2, 0.6), (0.08, 2.2, 0.6), (0.08, 2.15, 0.6), (-0.08, 2.15, 0.6))
    logo3Vertices = ((-0.08, 2.13, 0.6), (0.08, 2.13, 0.6), (-0.07, 2.08, 0.6), (0.07, 2.08, 0.6),
                     (-0.02, 2.03, 0.6), (0.02, 2.03, 0.6), (0, 2.02, 0.6))
    logo4Vertices = ((-0.07, 2.08, 0.6), (0.07, 2.08, 0.6), (-0.05, 2.06, 0.6), (0.05, 2.06, 0.6),
                     (0, 2.115, 0.6), (0, 2.085, 0.6))
    logo5Vertices = ((-0.09, 2.02, 0.6), (0.09, 2.02, 0.6),
                     (-0.05, 1.99, 0.6), (0.05, 1.99, 0.6),
                     (0, 1.975, 0.6),
                     (-0.09, 1.98, 0.6), (0.09, 1.98, 0.6),
                     (-0.05, 1.95, 0.6), (0.05, 1.95, 0.6),
                     (0, 1.94, 0.6),
                     (0.12, 2.035, 0.6), (0.12, 1.995, 0.6), (0.09, 1.995, 0.6), (0.09, 2.035, 0.6),
                     (-0.12, 2.035, 0.6), (-0.12, 1.995, 0.6), (-0.09, 1.995, 0.6), (-0.09, 2.035, 0.6))
    logo1Edges = ((0, 1), (1, 2), (2, 5), (5, 7), (7, 8), (8, 6), (6, 4), (4, 3), (3, 0))
    logo2Edges = ((0, 1), (1, 2), (2, 3), (3, 0))
    logo3Edges = ((0, 1), (1, 3), (3, 5), (5, 6), (6, 4), (4, 2), (2, 0))
    logo4Edges = ((0, 4), (4, 1), (1, 3), (3, 5), (5, 2), (2, 0))
    logo5Edges = ((0, 2), (2, 4), (4, 3), (3, 1),
                  (5, 7), (7, 9), (9, 8), (8, 6),
                  (0, 5), (1, 6),
                  (10, 11), (11, 12), (12, 13), (13, 10), (14, 15), (15, 16), (16, 17), (17, 14))
    logo1Surfaces = ((0, 1, 2, 3), (3, 2, 5, 4), (4, 5, 7, 6), (6, 7, 8, 6))
    logo2Surfaces = ((0, 1, 2, 3), (3, 2, 1, 0))
    logo3Surfaces = ((0, 1, 3, 2), (2, 3, 5, 4), (4, 5, 6, 4))
    logo4Surfaces = ((0, 4, 5, 2), (4, 5, 3, 1))
    logo5Surfaces = ((0, 2, 7, 5), (2, 4, 9, 7), (4, 9, 8, 3), (8, 3, 1, 6), (10, 11, 12, 13), (14, 15, 16, 17))
    glBegin(GL_QUADS)
    for logo1Surface in logo1Surfaces:
        for logo1Vertex in logo1Surface:
            glColor3fv((1, 1, 1))
            glVertex3fv(logo1Vertices[logo1Vertex])
    glEnd()
    glBegin(GL_QUADS)
    for logo2Surface in logo2Surfaces:
        for logo2Vertex in logo2Surface:
            glColor3fv((1, 0, 0))
            glVertex3fv(logo2Vertices[logo2Vertex])
    glEnd()
    glBegin(GL_QUADS)
    for logo3Surface in logo3Surfaces:
        for logo3Vertex in logo3Surface:
            glColor3fv((0, 0, 1))
            glVertex3fv(logo3Vertices[logo3Vertex])
    glEnd()
    glBegin(GL_QUADS)
    for logo4Surface in logo4Surfaces:
        for logo4Vertex in logo4Surface:
            glColor3fv((1, 1, 0))
            glVertex3fv(logo4Vertices[logo4Vertex])
    glEnd()
    glBegin(GL_QUADS)
    for logo5Surface in logo5Surfaces:
        for logo5Vertex in logo5Surface:
            glColor3fv((1, 1, 0))
            glVertex3fv(logo5Vertices[logo5Vertex])
    glEnd()
    glBegin(GL_LINES)
    for logo1Edge in logo1Edges:
        for logo1Vertex in logo1Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(logo1Vertices[logo1Vertex])
    glEnd()
    glBegin(GL_LINES)
    for logo2Edge in logo2Edges:
        for logo2Vertex in logo2Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(logo2Vertices[logo2Vertex])
    glEnd()
    glBegin(GL_LINES)
    for logo3Edge in logo3Edges:
        for logo3Vertex in logo3Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(logo3Vertices[logo3Vertex])
    glEnd()
    glBegin(GL_LINES)
    for logo4Edge in logo4Edges:
        for logo4Vertex in logo4Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(logo4Vertices[logo4Vertex])
    glEnd()
    glBegin(GL_LINES)
    for logo5Edge in logo5Edges:
        for logo5Vertex in logo5Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(logo5Vertices[logo5Vertex])
    glEnd()

def logo2():
    glBegin(GL_TRIANGLE_FAN)
    for i in range(360):
        glColor3f(1, 1, 1)
        degInRad = i * DEG2RAD
        glVertex3f(-0.6, math.cos(degInRad) * 0.23 + 2.1, math.sin(degInRad) * 0.23)
    glEnd()
    glBegin(GL_LINE_LOOP)
    for i in range(360):
        glColor3fv((0, 0, 0))
        degInRad = i * DEG2RAD
        glVertex3f(-0.6, math.cos(degInRad) * 0.23 + 2.1, math.sin(degInRad) * 0.23)
    glEnd()
    glBegin(GL_LINE_LOOP)
    for i in range(360):
        glColor3fv((0, 0, 0))
        degInRad = i * DEG2RAD
        glVertex3f(-0.6, math.cos(degInRad) * 0.18 + 2.1, math.sin(degInRad) * 0.18)
    glEnd()
    logo1Vertices = ((-0.6, 2.22, -0.1), (-0.6, 2.22, 0.1), (-0.6, 2.22, 0.1), (-0.6, 2.22, -0.1),
                     (-0.6, 2.08, -0.09), (-0.6, 2.08, 0.09), (-0.6, 2.03, -0.05), (-0.6, 2.03, 0.05),
                     (-0.6, 2, 0))
    logo2Vertices = ((-0.6, 2.2, -0.08), (-0.6, 2.2, 0.08), (-0.6, 2.15, 0.08), (-0.6, 2.15, -0.08))
    logo3Vertices = ((-0.6, 2.13, -0.08), (-0.6, 2.13, 0.08), (-0.6, 2.08, -0.07), (-0.6, 2.08, 0.07),
                     (-0.6, 2.03, -0.02), (-0.6, 2.03, 0.02), (-0.6, 2.02, 0))
    logo4Vertices = ((-0.6, 2.08, -0.07), (-0.6, 2.08, 0.07), (-0.6, 2.06, -0.05), (-0.6, 2.06, 0.05),
                     (-0.6, 2.115, 0), (-0.6, 2.085, 0))
    logo5Vertices = ((-0.6, 2.02, -0.09), (-0.6, 2.02, 0.09),
                     (-0.6, 1.99, -0.05), (-0.6, 1.99, 0.05),
                     (-0.6, 1.975, 0),
                     (-0.6, 1.98, -0.09), (-0.6, 1.98, 0.09),
                     (-0.6, 1.95, -0.05), (-0.6, 1.95, 0.05),
                     (-0.6, 1.94, 0),
                     (-0.6, 2.035, 0.12), (-0.6, 1.995, 0.12), (-0.6, 1.995, 0.09), (-0.6, 2.035, 0.09),
                     (-0.6, 2.035, -0.12), (-0.6, 1.995, -0.12), (-0.6, 1.995, -0.09), (-0.6, 2.035, -0.09))
    logo1Edges = ((0, 1), (1, 2), (2, 5), (5, 7), (7, 8), (8, 6), (6, 4), (4, 3), (3, 0))
    logo2Edges = ((0, 1), (1, 2), (2, 3), (3, 0))
    logo3Edges = ((0, 1), (1, 3), (3, 5), (5, 6), (6, 4), (4, 2), (2, 0))
    logo4Edges = ((0, 4), (4, 1), (1, 3), (3, 5), (5, 2), (2, 0))
    logo5Edges = ((0, 2), (2, 4), (4, 3), (3, 1),
                  (5, 7), (7, 9), (9, 8), (8, 6),
                  (0, 5), (1, 6),
                  (10, 11), (11, 12), (12, 13), (13, 10), (14, 15), (15, 16), (16, 17), (17, 14))
    logo1Surfaces = ((0, 1, 2, 3), (3, 2, 5, 4), (4, 5, 7, 6), (6, 7, 8, 6))
    logo2Surfaces = ((0, 1, 2, 3), (3, 2, 1, 0))
    logo3Surfaces = ((0, 1, 3, 2), (2, 3, 5, 4), (4, 5, 6, 4))
    logo4Surfaces = ((0, 4, 5, 2), (4, 5, 3, 1))
    logo5Surfaces = ((0, 2, 7, 5), (2, 4, 9, 7), (4, 9, 8, 3), (8, 3, 1, 6), (10, 11, 12, 13), (14, 15, 16, 17))
    glBegin(GL_QUADS)
    for logo1Surface in logo1Surfaces:
        for logo1Vertex in logo1Surface:
            glColor3fv((1, 1, 1))
            glVertex3fv(logo1Vertices[logo1Vertex])
    glEnd()
    glBegin(GL_QUADS)
    for logo2Surface in logo2Surfaces:
        for logo2Vertex in logo2Surface:
            glColor3fv((1, 0, 0))
            glVertex3fv(logo2Vertices[logo2Vertex])
    glEnd()
    glBegin(GL_QUADS)
    for logo3Surface in logo3Surfaces:
        for logo3Vertex in logo3Surface:
            glColor3fv((0, 0, 1))
            glVertex3fv(logo3Vertices[logo3Vertex])
    glEnd()
    glBegin(GL_QUADS)
    for logo4Surface in logo4Surfaces:
        for logo4Vertex in logo4Surface:
            glColor3fv((1, 1, 0))
            glVertex3fv(logo4Vertices[logo4Vertex])
    glEnd()
    glBegin(GL_QUADS)
    for logo5Surface in logo5Surfaces:
        for logo5Vertex in logo5Surface:
            glColor3fv((1, 1, 0))
            glVertex3fv(logo5Vertices[logo5Vertex])
    glEnd()
    glBegin(GL_LINES)
    for logo1Edge in logo1Edges:
        for logo1Vertex in logo1Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(logo1Vertices[logo1Vertex])
    glEnd()
    glBegin(GL_LINES)
    for logo2Edge in logo2Edges:
        for logo2Vertex in logo2Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(logo2Vertices[logo2Vertex])
    glEnd()
    glBegin(GL_LINES)
    for logo3Edge in logo3Edges:
        for logo3Vertex in logo3Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(logo3Vertices[logo3Vertex])
    glEnd()
    glBegin(GL_LINES)
    for logo4Edge in logo4Edges:
        for logo4Vertex in logo4Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(logo4Vertices[logo4Vertex])
    glEnd()
    glBegin(GL_LINES)
    for logo5Edge in logo5Edges:
        for logo5Vertex in logo5Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(logo5Vertices[logo5Vertex])
    glEnd()

def logo3():
    glBegin(GL_TRIANGLE_FAN)
    for i in range(360):
        glColor3f(1, 1, 1)
        degInRad = i * DEG2RAD
        glVertex3f(math.cos(degInRad) * 0.23, math.sin(degInRad) * 0.23 + 2.1, -0.6)
    glEnd()
    glBegin(GL_LINE_LOOP)
    for i in range(360):
        glColor3fv((0, 0, 0))
        degInRad = i * DEG2RAD
        glVertex3f(math.cos(degInRad) * 0.23, math.sin(degInRad) * 0.23 + 2.1, -0.6)
    glEnd()
    glBegin(GL_LINE_LOOP)
    for i in range(360):
        glColor3fv((0, 0, 0))
        degInRad = i * DEG2RAD
        glVertex3f(math.cos(degInRad) * 0.18, math.sin(degInRad) * 0.18 + 2.1, -0.6)
    glEnd()
    logo1Vertices = ((-0.1, 2.22, -0.6), (0.1, 2.22, -0.6), (0.1, 2.12, -0.6), (-0.1, 2.12, -0.6),
                     (-0.09, 2.08, -0.6), (0.09, 2.08, -0.6), (-0.05, 2.03, -0.6), (0.05, 2.03, -0.6),
                     (0, 2, -0.6))
    logo2Vertices = ((-0.08, 2.2, -0.6), (0.08, 2.2, -0.6), (0.08, 2.15, -0.6), (-0.08, 2.15, -0.6))
    logo3Vertices = ((-0.08, 2.13, -0.6), (0.08, 2.13, -0.6), (-0.07, 2.08, -0.6), (0.07, 2.08, -0.6),
                     (-0.02, 2.03, -0.6), (0.02, 2.03, -0.6), (0, 2.02, -0.6))
    logo4Vertices = ((-0.07, 2.08, -0.6), (0.07, 2.08, -0.6), (-0.05, 2.06, -0.6), (0.05, 2.06, -0.6),
                     (0, 2.115, -0.6), (0, 2.085, -0.6))
    logo5Vertices = ((-0.09, 2.02, -0.6), (0.09, 2.02, -0.6),
                     (-0.05, 1.99, -0.6), (0.05, 1.99, -0.6),
                     (0, 1.975, -0.6),
                     (-0.09, 1.98, -0.6), (0.09, 1.98, -0.6),
                     (-0.05, 1.95, -0.6), (0.05, 1.95, -0.6),
                     (0, 1.94, -0.6),
                     (0.12, 2.035, -0.6), (0.12, 1.995, -0.6), (0.09, 1.995, -0.6), (0.09, 2.035, -0.6),
                     (-0.12, 2.035, -0.6), (-0.12, 1.995, -0.6), (-0.09, 1.995, -0.6), (-0.09, 2.035, -0.6))
    logo1Edges = ((0, 1), (1, 2), (2, 5), (5, 7), (7, 8), (8, 6), (6, 4), (4, 3), (3, 0))
    logo2Edges = ((0, 1), (1, 2), (2, 3), (3, 0))
    logo3Edges = ((0, 1), (1, 3), (3, 5), (5, 6), (6, 4), (4, 2), (2, 0))
    logo4Edges = ((0, 4), (4, 1), (1, 3), (3, 5), (5, 2), (2, 0))
    logo5Edges = ((0, 2), (2, 4), (4, 3), (3, 1),
                  (5, 7), (7, 9), (9, 8), (8, 6),
                  (0, 5), (1, 6),
                  (10, 11), (11, 12), (12, 13), (13, 10), (14, 15), (15, 16), (16, 17), (17, 14))
    logo1Surfaces = ((0, 1, 2, 3), (3, 2, 5, 4), (4, 5, 7, 6), (6, 7, 8, 6))
    logo2Surfaces = ((0, 1, 2, 3), (3, 2, 1, 0))
    logo3Surfaces = ((0, 1, 3, 2), (2, 3, 5, 4), (4, 5, 6, 4))
    logo4Surfaces = ((0, 4, 5, 2), (4, 5, 3, 1))
    logo5Surfaces = ((0, 2, 7, 5), (2, 4, 9, 7), (4, 9, 8, 3), (8, 3, 1, 6), (10, 11, 12, 13), (14, 15, 16, 17))
    glBegin(GL_QUADS)
    for logo1Surface in logo1Surfaces:
        for logo1Vertex in logo1Surface:
            glColor3fv((1, 1, 1))
            glVertex3fv(logo1Vertices[logo1Vertex])
    glEnd()
    glBegin(GL_QUADS)
    for logo2Surface in logo2Surfaces:
        for logo2Vertex in logo2Surface:
            glColor3fv((1, 0, 0))
            glVertex3fv(logo2Vertices[logo2Vertex])
    glEnd()
    glBegin(GL_QUADS)
    for logo3Surface in logo3Surfaces:
        for logo3Vertex in logo3Surface:
            glColor3fv((0, 0, 1))
            glVertex3fv(logo3Vertices[logo3Vertex])
    glEnd()
    glBegin(GL_QUADS)
    for logo4Surface in logo4Surfaces:
        for logo4Vertex in logo4Surface:
            glColor3fv((1, 1, 0))
            glVertex3fv(logo4Vertices[logo4Vertex])
    glEnd()
    glBegin(GL_QUADS)
    for logo5Surface in logo5Surfaces:
        for logo5Vertex in logo5Surface:
            glColor3fv((1, 1, 0))
            glVertex3fv(logo5Vertices[logo5Vertex])
    glEnd()
    glBegin(GL_LINES)
    for logo1Edge in logo1Edges:
        for logo1Vertex in logo1Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(logo1Vertices[logo1Vertex])
    glEnd()
    glBegin(GL_LINES)
    for logo2Edge in logo2Edges:
        for logo2Vertex in logo2Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(logo2Vertices[logo2Vertex])
    glEnd()
    glBegin(GL_LINES)
    for logo3Edge in logo3Edges:
        for logo3Vertex in logo3Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(logo3Vertices[logo3Vertex])
    glEnd()
    glBegin(GL_LINES)
    for logo4Edge in logo4Edges:
        for logo4Vertex in logo4Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(logo4Vertices[logo4Vertex])
    glEnd()
    glBegin(GL_LINES)
    for logo5Edge in logo5Edges:
        for logo5Vertex in logo5Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(logo5Vertices[logo5Vertex])
    glEnd()
    
def logo4():
    glBegin(GL_TRIANGLE_FAN)
    for i in range(360):
        glColor3f(1, 1, 1)
        degInRad = i * DEG2RAD
        glVertex3f(0.6, math.cos(degInRad) * 0.23 + 2.1, math.sin(degInRad) * 0.23)
    glEnd()
    glBegin(GL_LINE_LOOP)
    for i in range(360):
        glColor3fv((0, 0, 0))
        degInRad = i * DEG2RAD
        glVertex3f(0.6, math.cos(degInRad) * 0.23 + 2.1, math.sin(degInRad) * 0.23)
    glEnd()
    glBegin(GL_LINE_LOOP)
    for i in range(360):
        glColor3fv((0, 0, 0))
        degInRad = i * DEG2RAD
        glVertex3f(0.6, math.cos(degInRad) * 0.18 + 2.1, math.sin(degInRad) * 0.18)
    glEnd()
    logo1Vertices = ((0.6, 2.22, -0.1), (0.6, 2.22, 0.1), (0.6, 2.22, 0.1), (0.6, 2.22, -0.1),
                     (0.6, 2.08, -0.09), (0.6, 2.08, 0.09), (0.6, 2.03, -0.05), (0.6, 2.03, 0.05),
                     (0.6, 2, 0))
    logo2Vertices = ((0.6, 2.2, -0.08), (0.6, 2.2, 0.08), (0.6, 2.15, 0.08), (0.6, 2.15, -0.08))
    logo3Vertices = ((0.6, 2.13, -0.08), (0.6, 2.13, 0.08), (0.6, 2.08, -0.07), (0.6, 2.08, 0.07),
                     (0.6, 2.03, -0.02), (0.6, 2.03, 0.02), (0.6, 2.02, 0))
    logo4Vertices = ((0.6, 2.08, -0.07), (0.6, 2.08, 0.07), (0.6, 2.06, -0.05), (0.6, 2.06, 0.05),
                     (0.6, 2.115, 0), (0.6, 2.085, 0))
    logo5Vertices = ((0.6, 2.02, -0.09), (0.6, 2.02, 0.09),
                     (0.6, 1.99, -0.05), (0.6, 1.99, 0.05),
                     (0.6, 1.975, 0),
                     (0.6, 1.98, -0.09), (0.6, 1.98, 0.09),
                     (0.6, 1.95, -0.05), (0.6, 1.95, 0.05),
                     (0.6, 1.94, 0),
                     (0.6, 2.035, 0.12), (0.6, 1.995, 0.12), (0.6, 1.995, 0.09), (0.6, 2.035, 0.09),
                     (0.6, 2.035, -0.12), (0.6, 1.995, -0.12), (0.6, 1.995, -0.09), (0.6, 2.035, -0.09))
    logo1Edges = ((0, 1), (1, 2), (2, 5), (5, 7), (7, 8), (8, 6), (6, 4), (4, 3), (3, 0))
    logo2Edges = ((0, 1), (1, 2), (2, 3), (3, 0))
    logo3Edges = ((0, 1), (1, 3), (3, 5), (5, 6), (6, 4), (4, 2), (2, 0))
    logo4Edges = ((0, 4), (4, 1), (1, 3), (3, 5), (5, 2), (2, 0))
    logo5Edges = ((0, 2), (2, 4), (4, 3), (3, 1),
                  (5, 7), (7, 9), (9, 8), (8, 6),
                  (0, 5), (1, 6),
                  (10, 11), (11, 12), (12, 13), (13, 10), (14, 15), (15, 16), (16, 17), (17, 14))
    logo1Surfaces = ((0, 1, 2, 3), (3, 2, 5, 4), (4, 5, 7, 6), (6, 7, 8, 6))
    logo2Surfaces = ((0, 1, 2, 3), (3, 2, 1, 0))
    logo3Surfaces = ((0, 1, 3, 2), (2, 3, 5, 4), (4, 5, 6, 4))
    logo4Surfaces = ((0, 4, 5, 2), (4, 5, 3, 1))
    logo5Surfaces = ((0, 2, 7, 5), (2, 4, 9, 7), (4, 9, 8, 3), (8, 3, 1, 6), (10, 11, 12, 13), (14, 15, 16, 17))
    glBegin(GL_QUADS)
    for logo1Surface in logo1Surfaces:
        for logo1Vertex in logo1Surface:
            glColor3fv((1, 1, 1))
            glVertex3fv(logo1Vertices[logo1Vertex])
    glEnd()
    glBegin(GL_QUADS)
    for logo2Surface in logo2Surfaces:
        for logo2Vertex in logo2Surface:
            glColor3fv((1, 0, 0))
            glVertex3fv(logo2Vertices[logo2Vertex])
    glEnd()
    glBegin(GL_QUADS)
    for logo3Surface in logo3Surfaces:
        for logo3Vertex in logo3Surface:
            glColor3fv((0, 0, 1))
            glVertex3fv(logo3Vertices[logo3Vertex])
    glEnd()
    glBegin(GL_QUADS)
    for logo4Surface in logo4Surfaces:
        for logo4Vertex in logo4Surface:
            glColor3fv((1, 1, 0))
            glVertex3fv(logo4Vertices[logo4Vertex])
    glEnd()
    glBegin(GL_QUADS)
    for logo5Surface in logo5Surfaces:
        for logo5Vertex in logo5Surface:
            glColor3fv((1, 1, 0))
            glVertex3fv(logo5Vertices[logo5Vertex])
    glEnd()
    glBegin(GL_LINES)
    for logo1Edge in logo1Edges:
        for logo1Vertex in logo1Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(logo1Vertices[logo1Vertex])
    glEnd()
    glBegin(GL_LINES)
    for logo2Edge in logo2Edges:
        for logo2Vertex in logo2Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(logo2Vertices[logo2Vertex])
    glEnd()
    glBegin(GL_LINES)
    for logo3Edge in logo3Edges:
        for logo3Vertex in logo3Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(logo3Vertices[logo3Vertex])
    glEnd()
    glBegin(GL_LINES)
    for logo4Edge in logo4Edges:
        for logo4Vertex in logo4Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(logo4Vertices[logo4Vertex])
    glEnd()
    glBegin(GL_LINES)
    for logo5Edge in logo5Edges:
        for logo5Vertex in logo5Edge:
            glColor3fv((0, 0, 0))
            glVertex3fv(logo5Vertices[logo5Vertex])
    glEnd()

##############################################      clock colour      ##################################################
def clockColour():
    glPushMatrix()
    glBegin(GL_TRIANGLE_FAN)
    for i in range(360):
        glColor3f(1, 1, 1)
        degInRad = i * DEG2RAD
        glVertex3f(math.cos(degInRad) * radius1, math.sin(degInRad) * radius1 + 0.8, 0.67)
    glEnd()
    glPopMatrix()
    glPushMatrix()
    glBegin(GL_TRIANGLE_FAN)
    for i in range(360):
        glColor3fv((1, 1, 1))
        degInRad = i * DEG2RAD
        glVertex3f(math.cos(degInRad) * radius1, math.sin(degInRad) * radius1 + 0.8, -0.67)
    glEnd()
    glPopMatrix()
    glPushMatrix()
    glBegin(GL_TRIANGLE_FAN)
    for i in range(360):
        glColor3fv((1, 1, 1))
        degInRad = i * DEG2RAD
        glVertex3f(-0.6, math.cos(degInRad) * radius1 + 0.8, math.sin(degInRad) * radius1)
    glEnd()
    glPopMatrix()
    glPushMatrix()
    glBegin(GL_TRIANGLE_FAN)
    for i in range(360):
        glColor3fv((1, 1, 1))
        degInRad = i * DEG2RAD
        glVertex3f(0.6, math.cos(degInRad) * radius1 + 0.8, math.sin(degInRad) * radius1)
    glEnd()
    glPopMatrix()

###############################################      solid     ########################################################
def solid():
    glBegin(GL_QUADS)
    for roadSurface in roadSurfaces:
        for roadVertex in roadSurface:
            glColor3fv((0.749, 0.674, 0.525))
            glVertex3fv(roadVertices[roadVertex])
    for baseBlockSurface in baseBlockSurfaces:
        for baseBlockVertex in baseBlockSurface:
            glColor3fv((0.792, 0.792, 0.757))
            glVertex3fv(baseBlockVertices[baseBlockVertex])
    for stair1Surface in stair1Surfaces:
        for stair1Vertex in stair1Surface:
            glColor3fv((0.792, 0.792, 0.757))
            glVertex3fv(stair1Vertices[stair1Vertex])
    for stair2Surface in stair2Surfaces:
        for stair2Vertex in stair2Surface:
            glColor3fv((0.792, 0.792, 0.757))
            glVertex3fv(stair2Vertices[stair2Vertex])
    for stair3Surface in stair3Surfaces:
        for stair3Vertex in stair3Surface:
            glColor3fv((0.792, 0.792, 0.757))
            glVertex3fv(stair3Vertices[stair3Vertex])
    for stair4Surface in stair4Surfaces:
        for stair4Vertex in stair4Surface:
            glColor3fv((0.792, 0.792, 0.757))
            glVertex3fv(stair4Vertices[stair4Vertex])
    for stair5Surface in stair5Surfaces:
        for stair5Vertex in stair5Surface:
            glColor3fv((0.792, 0.792, 0.757))
            glVertex3fv(stair5Vertices[stair5Vertex])
    for stair6Surface in stair6Surfaces:
        for stair6Vertex in stair6Surface:
            glColor3fv((0.792, 0.792, 0.757))
            glVertex3fv(stair6Vertices[stair6Vertex])
    for base1Surface in base1Surfaces:
        for base1Vertex in base1Surface:
            glColor3fv((0.55, 0.55, 0.55))
            glVertex3fv(base1Vertices[base1Vertex])
    for block1Surface in block1Surfaces:
        for block1Vertex in block1Surface:
            glColor3fv((0.89, 0.89, 0.89))
            glVertex3fv(block1Vertices[block1Vertex])
    for base2Surface in base2Surfaces:
        for base2Vertex in base2Surface:
            glColor3fv((0.55, 0.55, 0.55))
            glVertex3fv(base2Vertices[base2Vertex])
    for topSurface in topSurfaces:
        for topVertex in topSurface:
            glColor3fv((0.925, 0.925, 0.361))
            glVertex3fv(topVertices[topVertex])
    for base4Surface in base4Surfaces:
        for base4Vertex in base4Surface:
            glColor3fv((0.55, 0.55, 0.55))
            glVertex3fv(base4Vertices[base4Vertex])
    for block3Surface in block3Surfaces:
        for block3Vertex in block3Surface:
            glColor3fv((0.89, 0.89, 0.89))
            glVertex3fv(block3Vertices[block3Vertex])
    for smallBlock1Surface in smallBlock1Surfaces:
        for smallBlock1Vertex in smallBlock1Surface:
            glColor3fv((0.992, 0.956, 0.149))
            glVertex3fv(smallBlock1Vertices[smallBlock1Vertex])
    for smallBlock2Surface in smallBlock2Surfaces:
        for smallBlock2Vertex in smallBlock2Surface:
            glColor3fv((0.992, 0.956, 0.149))
            glVertex3fv(smallBlock2Vertices[smallBlock2Vertex])
    for smallBlock3Surface in smallBlock3Surfaces:
        for smallBlock3Vertex in smallBlock3Surface:
            glColor3fv((0.992, 0.956, 0.149))
            glVertex3fv(smallBlock3Vertices[smallBlock3Vertex])
    for smallBlock4Surface in smallBlock4Surfaces:
        for smallBlock4Vertex in smallBlock4Surface:
            glColor3fv((0.992, 0.956, 0.149))
            glVertex3fv(smallBlock4Vertices[smallBlock4Vertex])
    for smallPyramid1Surface in smallPyramid1Surfaces:
        for smallPyramid1Vertex in smallPyramid1Surface:
            glColor3fv((0.992, 0.956, 0.149))
            glVertex3fv(smallPyramid1Vertices[smallPyramid1Vertex])
    for smallPyramid2Surface in smallPyramid2Surfaces:
        for smallPyramid2Vertex in smallPyramid2Surface:
            glColor3fv((0.992, 0.956, 0.149))
            glVertex3fv(smallPyramid2Vertices[smallPyramid2Vertex])
    for smallPyramid3Surface in smallPyramid3Surfaces:
        for smallPyramid3Vertex in smallPyramid3Surface:
            glColor3fv((0.992, 0.956, 0.149))
            glVertex3fv(smallPyramid3Vertices[smallPyramid3Vertex])
    for smallPyramid4Surface in smallPyramid4Surfaces:
        for smallPyramid4Vertex in smallPyramid4Surface:
            glColor3fv((0.992, 0.956, 0.149))
            glVertex3fv(smallPyramid4Vertices[smallPyramid4Vertex])
    for base3Surface in base3Surfaces:
        for base3Vertex in base3Surface:
            glColor3fv((0.55, 0.55, 0.55))
            glVertex3fv(base3Vertices[base3Vertex])
    for block2Surface in block2Surfaces:
        for block2Vertex in block2Surface:
            glColor3fv((0.89, 0.89, 0.89))
            glVertex3fv(block2Vertices[block2Vertex])
    for gate1Surface in gate1Surfaces:
        for gate1Vertex in gate1Surface:
            glColor3fv((0.45, 0.776, 0.992))
            glVertex3fv(gate1Vertices[gate1Vertex])
    for gate2Surface in gate2Surfaces:
        for gate2Vertex in gate2Surface:
            glColor3fv((0.45, 0.776, 0.992))
            glVertex3fv(gate2Vertices[gate2Vertex])
    for tree1Surface in tree1Surfaces:
        for tree1Vertex in tree1Surface:
            glColor3fv((0.725, 0.529, 0.07))
            glVertex3fv(tree1Vertices[tree1Vertex])
    for tree2Surface in tree2Surfaces:
        for tree2Vertex in tree2Surface:
            glColor3fv((0.725, 0.529, 0.07))
            glVertex3fv(tree2Vertices[tree2Vertex])
    for tree3Surface in tree3Surfaces:
        for tree3Vertex in tree3Surface:
            glColor3fv((0.725, 0.529, 0.07))
            glVertex3fv(tree3Vertices[tree3Vertex])
    for tree4Surface in tree4Surfaces:
        for tree4Vertex in tree4Surface:
            glColor3fv((0.725, 0.529, 0.07))
            glVertex3fv(tree4Vertices[tree4Vertex])
    for tree5Surface in tree5Surfaces:
        for tree5Vertex in tree5Surface:
            glColor3fv((0.725, 0.529, 0.07))
            glVertex3fv(tree5Vertices[tree5Vertex])
    for tree6Surface in tree6Surfaces:
        for tree6Vertex in tree6Surface:
            glColor3fv((0.725, 0.529, 0.07))
            glVertex3fv(tree6Vertices[tree6Vertex])
    for tree7Surface in tree7Surfaces:
        for tree7Vertex in tree7Surface:
            glColor3fv((0.725, 0.529, 0.07))
            glVertex3fv(tree7Vertices[tree7Vertex])
    for tree8Surface in tree8Surfaces:
        for tree8Vertex in tree8Surface:
            glColor3fv((0.725, 0.529, 0.07))
            glVertex3fv(tree8Vertices[tree8Vertex])
    for leaf1Surface in leaf1Surfaces:
        for leaf1Vertex in leaf1Surface:
            glColor3fv((0.2, 1, 0.2))
            glVertex3fv(leaf1Vertices[leaf1Vertex])
    for leaf2Surface in leaf2Surfaces:
        for leaf2Vertex in leaf2Surface:
            glColor3fv((0.2, 1, 0.2))
            glVertex3fv(leaf2Vertices[leaf2Vertex])
    for leaf3Surface in leaf3Surfaces:
        for leaf3Vertex in leaf3Surface:
            glColor3fv((0.2, 1, 0.2))
            glVertex3fv(leaf3Vertices[leaf3Vertex])
    for leaf4Surface in leaf4Surfaces:
        for leaf4Vertex in leaf4Surface:
            glColor3fv((0.2, 1, 0.2))
            glVertex3fv(leaf4Vertices[leaf4Vertex])
    glEnd()

#############################################       main       #########################################################
def main():
    x = 0
    pygame.init()
    display = (800, 600)
    os.environ['SDL_VIDEO_CENTERED'] = '1'
    pygame.display.set_caption('UMS Clocktower')
    pygame.display.set_mode(display, DOUBLEBUF|OPENGL)
    glClearColor(0.7, 255, 255, 255)
    glClear(GL_COLOR_BUFFER_BIT)
    gluPerspective(45, (display[0]/display[1]), 0.1, 100.0)
    glTranslatef(0, 0.4, -10.5)
    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    x += 7
                if event.key == pygame.K_RIGHT:
                    x -= 7
        glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT)
        glClearDepthf(1)
        glEnable(GL_DEPTH_TEST)
        glDepthFunc(GL_LEQUAL)

        ################### background ####################
        backBuilding1()
        background()

        ################# ground colour ###################
        glPushMatrix()
        glBegin(GL_TRIANGLE_FAN)
        for i in range(360):
            glColor3f(0, 0.6, 0)
            degInRad = i * DEG2RAD
            glVertex3f(math.cos(degInRad) * radius2, -3.7, math.sin(degInRad) * radius2)
        glEnd()
        glPopMatrix()

        #################### rotate ########################
        glPushMatrix()
        glRotatef(40 + x, 0, 1, 0)
        solid()
        logo1()
        logo2()
        logo3()
        logo4()
        clockColour()
        circle()
        line()
        glPopMatrix()
        pygame.display.flip()

if __name__ == "__main__":
    main()